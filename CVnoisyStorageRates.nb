(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    243361,       5612]
NotebookOptionsPosition[    241563,       5549]
NotebookOutlinePosition[    241930,       5565]
CellTagsIndexPosition[    241887,       5562]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 StyleBox[
  RowBox[{"(*", 
   RowBox[{"Covariance", " ", "Matrix"}], " ", "*)"}], "Subsection"]], "Input",
 CellChangeTimes->{{3.666328109132004*^9, 3.6663281173394737`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Covariance", " ", "Matrix", " ", "in", " ", "units", " ", "hbar"}], "=", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Vacuum", " ", "Variance"}], " ", "=", "1"}], ")"}], " ", 
       "for", " ", 
       RowBox[{"squeezing", "/", 
        RowBox[{"anitsqueezing", ":", "  ", 
         RowBox[{"\[Nu]", "[", 
          RowBox[{"sq_", ",", "asq_"}], "]"}]}]}]}], ":=", 
      RowBox[{"Cosh", "[", 
       RowBox[{"2", "*", 
        RowBox[{"1", "/", "20"}], 
        RowBox[{"Log", "[", "10", "]"}], 
        RowBox[{"(", 
         RowBox[{"sq", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"asq", "-", "sq"}], ")"}], "/", "2"}]}], ")"}]}], 
       "]"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"a", "[", 
      RowBox[{"sq_", ",", "asq_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"asq", "-", "sq"}], ")"}], "/", "20"}], ")"}]}], 
      "\[IndentingNewLine]", "\[Mu]A"}]}], ",", " ", 
    RowBox[{"\[Mu]B", " ", "=", " ", 
     RowBox[{
     "losses", " ", "of", " ", "Alice", " ", "and", " ", "Bob", 
      "\[IndentingNewLine]", "ENA"}]}], ",", 
    RowBox[{"ENB", " ", "=", " ", 
     RowBox[{
     "excess", " ", "noise", " ", "of", " ", "Alice", " ", "and", " ", "Bob", 
      " ", 
      RowBox[{"(", 
       RowBox[{"classical", " ", "noise"}], ")"}]}]}]}], " ", 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hbar", "=", "2"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{"\\", 
     RowBox[{
      RowBox[{"delta", "^", "2"}], "/"}], "\\", "hbar"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]A0", "=", 
     RowBox[{"10", "^", 
      RowBox[{"-", "9"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Alpha]0", "=", " ", "61"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "with", " ", "cutoff", " ", "parameter", " ", "computed", " ", "from", 
     " ", "covariance", " ", "matrix", " ", "G"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"eps\[Alpha]", "[", 
      RowBox[{"G_", ",", "\[Alpha]_", ",", "n_"}], "]"}], ":=", 
     RowBox[{"\[Sqrt]", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"10", "^", " ", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"SetPrecision", "[", 
              RowBox[{
               RowBox[{"(", "  ", "n", " ", ")"}], ",", "30"}], "]"}], " ", 
             RowBox[{"Log", "[", 
              RowBox[{"10", ",", 
               RowBox[{"N", "[", 
                RowBox[{
                 RowBox[{"Erf", "[", 
                  FractionBox["\[Alpha]", 
                   RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"SetPrecision", "[", 
                    RowBox[{
                    RowBox[{"G", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", "30"}], 
                    "]"}]]}]], "]"}], ",", "100"}], "]"}]}], " ", "]"}]}], 
            "]"}]}]}], ")"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"gAB", "[", 
      RowBox[{
      "v_", ",", "s_", ",", "\[Mu]A_", ",", "\[Mu]B_", ",", "ENA_", ",", 
       "ENB_"}], "]"}], ":=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ENA", "+", 
          RowBox[{"s", " ", "v", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Mu]A"}], ")"}]}], "+", "\[Mu]A"}], ",", "0", 
         ",", 
         RowBox[{"s", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["v", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mu]A"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mu]B"}], ")"}]}]]}], ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"ENA", "+", 
          RowBox[{"s", " ", "v", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Mu]A"}], ")"}]}], "+", "\[Mu]A"}], ",", "0", 
         ",", 
         RowBox[{
          RowBox[{"-", "s"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["v", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mu]A"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mu]B"}], ")"}]}]]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"s", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["v", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mu]A"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mu]B"}], ")"}]}]]}], ",", "0", ",", 
         RowBox[{"ENB", "+", 
          RowBox[{"s", " ", "v", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Mu]B"}], ")"}]}], "+", "\[Mu]B"}], ",", 
         "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "s"}], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["v", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mu]A"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mu]B"}], ")"}]}]]}], ",", "0", ",", 
         RowBox[{"ENB", "+", 
          RowBox[{"s", " ", "v", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "\[Mu]B"}], ")"}]}], "+", "\[Mu]B"}]}], "}"}]}],
       "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Covariance", " ", "matrix", " ", "with", " ", 
      RowBox[{"squeezing", "/", "antisqueezing"}], " ", "in", " ", "dB", " ", 
      "\[IndentingNewLine]", "squeezing", " ", "in", " ", "dB", " ", 
      "depending", " ", "on", " ", "variance", " ", 
      RowBox[{"in", " ", "\\", "hbar"}]}], " ", "=", 
     RowBox[{
      RowBox[{"2", ":", "\[IndentingNewLine]", 
       RowBox[{"sq", "[", "V_", "]"}]}], ":=", 
      RowBox[{
       RowBox[{"10", "/", 
        RowBox[{"Log", "[", "10", "]"}]}], " ", 
       RowBox[{"ArcCosh", "[", "V", "]"}]}]}]}], " ", "\[IndentingNewLine]", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Nu]", "[", 
      RowBox[{"sq_", ",", "asq_"}], "]"}], ":=", 
     RowBox[{"Cosh", "[", 
      RowBox[{"2", "*", 
       RowBox[{"1", "/", "20"}], 
       RowBox[{"Log", "[", "10", "]"}], 
       RowBox[{"(", 
        RowBox[{"sq", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"asq", "-", "sq"}], ")"}], "/", "2"}]}], ")"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"a", "[", 
     RowBox[{"sq_", ",", "asq_"}], "]"}], ":=", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"asq", "-", "sq"}], ")"}], "/", "20"}], ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"G", "[", 
      RowBox[{
      "\[Nu]_", ",", "a_", ",", "\[Mu]A_", ",", "\[Mu]B_", ",", "ENA_", ",", 
       "ENB_"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mu]A"}], ")"}], "a", "*", "\[Nu]"}], " ", 
           "+", " ", "\[Mu]A"}], ",", "0", ",", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Mu]A"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Mu]B"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Nu]", "^", "2"}], " ", "-", "1"}], ")"}]}], "]"}], 
           "a"}], ",", "0"}], "}"}], "  ", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mu]A"}], ")"}], "a", "*", "\[Nu]"}], " ", 
           "+", " ", "\[Mu]A"}], ",", "0", ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Mu]A"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Mu]B"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Nu]", "^", "2"}], " ", "-", "1"}], ")"}]}], 
             "]"}]}], "a"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Mu]A"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Mu]B"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Nu]", "^", "2"}], " ", "-", "1"}], ")"}]}], "]"}], 
           "a"}], ",", "0", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mu]B"}], ")"}], "a", "*", "\[Nu]"}], " ", 
           "+", " ", "\[Mu]B"}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Mu]A"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"1", "-", "\[Mu]B"}], ")"}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Nu]", "^", "2"}], " ", "-", "1"}], ")"}]}], 
             "]"}]}], "a"}], ",", "0", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "\[Mu]B"}], ")"}], "a", "*", "\[Nu]"}], " ", 
           "+", " ", "\[Mu]B"}]}], "}"}]}], "}"}], "+", 
      RowBox[{"DiagonalMatrix", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ENA", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]A"}], ")"}]}], ",", 
         RowBox[{"ENA", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]A"}], ")"}]}], ",", 
         RowBox[{"ENB", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]B"}], ")"}]}], ",", 
         RowBox[{"ENB", 
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Mu]B"}], ")"}]}]}], "}"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GAB", "[", 
     RowBox[{
     "sq_", ",", "asq_", ",", "\[Mu]A_", ",", "\[Mu]B_", ",", "ENA_", ",", 
      "ENB_"}], "]"}], ":=", " ", 
    RowBox[{"gAB", "[", 
     RowBox[{
      RowBox[{"\[Nu]", "[", 
       RowBox[{"sq", ",", "asq"}], "]"}], ",", 
      RowBox[{"a", "[", 
       RowBox[{"sq", ",", "asq"}], "]"}], ",", "\[Mu]A", ",", "\[Mu]B", ",", 
      "ENA", ",", "ENB"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EPRlossAB", "[", 
     RowBox[{"V_", ",", "TA_", ",", "TB_", ",", "xi_"}], "]"}], ":=", 
    RowBox[{"G", "[", 
     RowBox[{"V", ",", "1", ",", 
      RowBox[{"1", "-", "TA"}], ",", 
      RowBox[{"1", "-", "TB"}], ",", "xi", ",", "xi"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EPRlossA", "[", 
     RowBox[{"V_", ",", "TA_", ",", "xi_"}], "]"}], ":=", 
    RowBox[{"G", "[", 
     RowBox[{"V", ",", "1", ",", 
      RowBox[{"1", "-", "TA"}], ",", "0", ",", "xi", ",", "0"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EPRlossB", "[", 
     RowBox[{"V_", ",", "TB_", ",", "xi_"}], "]"}], ":=", 
    RowBox[{"G", "[", 
     RowBox[{"V", ",", "1", ",", "0", ",", 
      RowBox[{"1", "-", "TB"}], ",", "0", ",", "xi"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EPRlossBhbar2", "[", 
     RowBox[{"V_", ",", "T_", ",", "xi_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"V", ",", "0", ",", 
        SqrtBox[
         RowBox[{"T", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["V", "2"]}], ")"}]}]], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "V", ",", "0", ",", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"T", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["V", "2"]}], ")"}]}]]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        SqrtBox[
         RowBox[{"T", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["V", "2"]}], ")"}]}]], ",", "0", ",", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "-", 
         RowBox[{"T", "/", "2"}], "+", 
         RowBox[{"T", " ", "V"}], "+", 
         RowBox[{"T", " ", "xi"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"T", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["V", "2"]}], ")"}]}]]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"1", "/", "2"}], "-", 
         RowBox[{"T", "/", "2"}], "+", 
         RowBox[{"T", " ", "V"}], "+", 
         RowBox[{"T", " ", "xi"}]}]}], "}"}]}], "}"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Gauss", "[", 
      RowBox[{"\[Xi]_", ",", "\[CapitalGamma]_"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "Pi"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"Length", "[", "\[CapitalGamma]", "]"}], ")"}]}], 
          RowBox[{"Det", "[", "\[CapitalGamma]", "]"}]}], "]"}], ")"}]}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], 
        RowBox[{"\[Xi]", ".", 
         RowBox[{"Inverse", "[", " ", "\[CapitalGamma]", "]"}], ".", 
         "\[Xi]"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Practical", " ", "values", " ", "for", " ", "the", " ", "covariance", 
     " ", "matrix"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G0", "=", 
     RowBox[{"GAB", "[", 
      RowBox[{"10", ",", "10", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "]"}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"squeezing", " ", "=", " ", 
      RowBox[{"antisqueezing", " ", "=", " ", 
       RowBox[{"10", " ", "dB"}]}]}], ";", " ", 
     RowBox[{
     "no", " ", "losses", " ", "and", " ", "no", " ", "excess", " ", 
      "noise"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G1", "=", 
     RowBox[{"GAB", "[", 
      RowBox[{"11", ",", "16", ",", "0", ",", "0", ",", "0", ",", "0"}], 
      "]"}]}], ";"}], "  ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"squeezing", "/", "antisqueezing"}], " ", "as", " ", "roughly", 
      " ", "in", " ", "the", " ", "experiment", " ", "of", " ", "the", " ", 
      "Hannover", " ", "group"}], ";", " ", 
     RowBox[{
     "no", " ", "losses", " ", "and", " ", "no", " ", "excess", " ", 
      "noise"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{"===", "===", "===", "===", "===", "===", "===", "===", 
      RowBox[{"\[Equal]", "\[IndentingNewLine]", 
       RowBox[{"Channel", " ", "loss", " ", "vs", " ", "distance"}]}], " ", 
      "\[IndentingNewLine]", "===", "===", "===", "===", "===", "===", "===", 
      "===", "\[Equal]"}], "*)"}], "Subsection"], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "LossPerkm", " ", "betw", " ", "0.2", " ", "and", " ", "0.25", " ", "for",
      " ", "1550", " ", "nm"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LineLoss", "[", 
     RowBox[{"km_", ",", "LossPerkm_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"km", "\[Equal]", "0"}], ",", "0", ",", 
      RowBox[{"N", "[", 
       RowBox[{"(", 
        RowBox[{"0.97", "-", 
         RowBox[{"0.97", "*", 
          RowBox[{"10", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "km"}], "*", 
             RowBox[{"LossPerkm", "/", "10"}]}], ")"}]}]}], "+", "0.03"}], 
        RowBox[{"(*", 
         RowBox[{"Coupling", " ", 
          RowBox[{
           RowBox[{"loss", "!!"}], "!"}]}], "*)"}], ")"}], "]"}]}], "]"}]}], 
   "\n", 
   RowBox[{
    RowBox[{"LineLossdB", "[", 
     RowBox[{"km_", ",", "LossPerkm_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", "10"}], 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       RowBox[{"LineLoss", "[", 
        RowBox[{"km", ",", "LossPerkm"}], "]"}]}], "]"}]}]}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"loss", "[", 
     RowBox[{"km_", ",", "LossPerkm_"}], "]"}], ":=", 
    RowBox[{"1", "-", 
     RowBox[{"1", "*", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "km"}], "*", 
         RowBox[{"LossPerkm", "/", "10"}]}], ")"}]}]}]}]}], 
   RowBox[{"(*", 
    RowBox[{"Ohne", " ", "Coupling"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lossdB", "[", 
     RowBox[{"km_", ",", "LossPerkm_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", "10"}], 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       RowBox[{"loss", "[", 
        RowBox[{"km", ",", "LossPerkm"}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dist", "[", 
     RowBox[{"loss_", ",", "LossPerkm_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "10"}], "/", "LossPerkm"}], " ", "*", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"10", ",", 
       RowBox[{"1", "-", "loss"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"distdB", "[", 
     RowBox[{"lossdB_", ",", "LossPerkm_"}], "]"}], ":=", 
    RowBox[{"lossdB", "/", "LossPerkm"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Picks", " ", "submatrices", " ", "of", " ", "the", " ", "covarianz", " ",
      "matrix"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PickA", "[", "\[CapitalGamma]_", "]"}], " ", ":=", " ", 
    RowBox[{"\[CapitalGamma]", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ";;", "2"}], ",", 
       RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Alice", "'"}], "s", " ", "X", " ", "and", " ", "P", " ", 
     "distribution"}], "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PickB", "[", "\[CapitalGamma]_", "]"}], " ", ":=", " ", 
    RowBox[{"\[CapitalGamma]", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"3", ";;", "4"}], ",", 
       RowBox[{"3", ";;", "4"}]}], "]"}], "]"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Bob", "'"}], "s", " ", "X", " ", "and", " ", "P", " ", 
     "distribution"}], "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PickC", "[", "\[CapitalGamma]_", "]"}], " ", ":=", " ", 
    RowBox[{"\[CapitalGamma]", "[", 
     RowBox[{"[", 
      RowBox[{
       RowBox[{"1", ";;", "2"}], ",", 
       RowBox[{"3", ";;", "4"}]}], "]"}], "]"}]}], "  ", 
   RowBox[{"(*", 
    RowBox[{"The", " ", "correlation", " ", "matrix"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PickX", "[", "\[CapitalGamma]_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "3"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "1"}], "]"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "3"}], "]"}], "]"}]}], "}"}]}], "}"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{
    "the", " ", "X", " ", "distribution", " ", "of", " ", "Alice", " ", "and",
      " ", "Bob"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PickP", "[", "\[CapitalGamma]_", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "4"}], "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "2"}], "]"}], "]"}], ",", 
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"[", 
          RowBox[{"4", ",", "4"}], "]"}], "]"}]}], "}"}]}], "}"}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PickXA", "[", "\[CapitalGamma]_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[CapitalGamma]", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "}"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PickXB", "[", "\[CapitalGamma]_", "]"}], ":=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\[CapitalGamma]", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "3"}], "]"}], "]"}], "}"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "the", " ", "P", " ", "distribution", " ", "of", " ", "Alice", " ", "and",
      " ", "Bob"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", "Homodyne", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]Ax2", "[", "\[CapitalGamma]_", "]"}], ":=", 
     RowBox[{
      RowBox[{"PickA", "[", "\[CapitalGamma]", "]"}], "-", 
      RowBox[{
       RowBox[{
        RowBox[{"PickC", "[", "\[CapitalGamma]", "]"}], "\[Transpose]"}], ".", 
       RowBox[{"PseudoInverse", "[", 
        RowBox[{"XX", ".", 
         RowBox[{"PickB", "[", "\[CapitalGamma]", "]"}], ".", "XX"}], "]"}], 
       ".", 
       RowBox[{"PickC", "[", "\[CapitalGamma]", "]"}]}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Alice", "'"}], "s", " ", "cov", " ", "matrix", " ", 
     "conditioned", " ", "on", " ", 
     RowBox[{"Bob", "'"}], "s", " ", "measurement"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]Bx2", "[", "\[CapitalGamma]_", "]"}], ":=", 
     RowBox[{
      RowBox[{"PickB", "[", "\[CapitalGamma]", "]"}], "-", 
      RowBox[{
       RowBox[{"PickC", "[", "\[CapitalGamma]", "]"}], ".", 
       RowBox[{"PseudoInverse", "[", 
        RowBox[{"XX", ".", 
         RowBox[{"PickA", "[", "\[CapitalGamma]", "]"}], ".", "XX"}], "]"}], 
       ".", 
       RowBox[{
        RowBox[{"PickC", "[", "\[CapitalGamma]", "]"}], 
        "\[Transpose]"}]}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Bob", "'"}], "s", " ", "cov", " ", "matrix", " ", "conditioned",
      " ", "on", " ", 
     RowBox[{"Alice", "'"}], "s", " ", "measurement"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Covariance", " ", "of", " ", "A", " ", "after", " ", "Homodyne", " ", 
     "X", " ", "on", " ", "B", " ", 
     RowBox[{"quadrature", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GAHetB", "[", "G_", "]"}], ":=", 
     RowBox[{
      RowBox[{"PickA", "[", "G", "]"}], "-", 
      RowBox[{
       RowBox[{
        RowBox[{"PickC", "[", "G", "]"}], "\[Transpose]"}], ".", 
       RowBox[{"PseudoInverse", "[", 
        RowBox[{
         RowBox[{"PickB", "[", "G", "]"}], "+", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], ".", 
       RowBox[{"PickC", "[", "G", "]"}]}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GBHetA", "[", "G_", "]"}], ":=", 
     RowBox[{
      RowBox[{"PickB", "[", "G", "]"}], "-", 
      RowBox[{
       RowBox[{"PickC", "[", "G", "]"}], ".", 
       RowBox[{"PseudoInverse", "[", 
        RowBox[{
         RowBox[{"PickA", "[", "G", "]"}], "+", 
         RowBox[{"IdentityMatrix", "[", "2", "]"}]}], "]"}], ".", 
       RowBox[{
        RowBox[{"PickC", "[", "G", "]"}], "\[Transpose]"}]}]}]}], ";"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Gauss", "[", 
      RowBox[{"\[Xi]_", ",", "\[CapitalGamma]_"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "Pi"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"Length", "[", "\[CapitalGamma]", "]"}], ")"}]}], 
          RowBox[{"Det", "[", "\[CapitalGamma]", "]"}]}], "]"}], ")"}]}], " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], 
        RowBox[{"\[Xi]", ".", 
         RowBox[{"Inverse", "[", " ", "\[CapitalGamma]", "]"}], ".", 
         "\[Xi]"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Conditional", " ", "variance"}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CondVarXAgXB", "[", "G_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Det", "[", 
      RowBox[{"PickX", "[", "G", "]"}], "]"}], "/", 
     RowBox[{
      RowBox[{"PickXB", "[", "G", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CondVarXBgXA", "[", "G_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Det", "[", 
      RowBox[{"PickX", "[", "G", "]"}], "]"}], "/", 
     RowBox[{
      RowBox[{"PickXA", "[", "G", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Differential", " ", "Shannon", " ", "Entropie", " ", "f\[UDoubleDot]r", 
     " ", "einzelne", " ", "Variable"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HShanSi", "[", "g_", "]"}], ":=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"2", "*", 
         RowBox[{"Log", "[", "2", "]"}]}], ")"}]}], "+", 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "*", "Pi", "*", "g"}], "]"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Shannon", " ", "Entropie", " ", "f\[UDoubleDot]r", " ", "bipartites", 
     " ", "System"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HShanBi", "[", "\[CapitalGamma]_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "\[CapitalGamma]", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", 
        RowBox[{"Log", "[", "2", "]"}]}], ")"}]}], "+", 
     RowBox[{"Log", "[", 
      RowBox[{"2", ",", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "*", "Pi"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"Length", "[", "\[CapitalGamma]", "]"}], ")"}]}], 
         RowBox[{"Det", "[", "\[CapitalGamma]", "]"}]}], "]"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"differential", " ", "von", " ", "Neumann", " ", "h", 
     RowBox[{"(", 
      RowBox[{"X_AX", "_B"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HXAXB", "[", "G_", "]"}], ":=", " ", 
    RowBox[{"HShanBi", "[", 
     RowBox[{"PickX", "[", "G", "]"}], "]"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"von", " ", "Neumann", " ", "H", 
     RowBox[{"(", 
      SubscriptBox["X", "A"], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HXA", "[", "G_", "]"}], ":=", 
     RowBox[{"HShanSi", "[", 
      RowBox[{
       RowBox[{"PickX", "[", "G", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HXB", "[", "G_", "]"}], ":=", 
     RowBox[{"HShanSi", "[", 
      RowBox[{
       RowBox[{"PickX", "[", "G", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"differential", " ", "von", " ", "Neumann", " ", "h", 
     RowBox[{"(", 
      RowBox[{"X_AX", "_B"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HPAPB", "[", "G_", "]"}], ":=", " ", 
    RowBox[{"HShanBi", "[", 
     RowBox[{"PickP", "[", "G", "]"}], "]"}]}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"von", " ", "Neumann", " ", "H", 
     RowBox[{"(", 
      SubscriptBox["X", "A"], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HPA", "[", "G_", "]"}], ":=", 
     RowBox[{"HShanSi", "[", 
      RowBox[{
       RowBox[{"PickP", "[", "G", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HPB", "[", "G_", "]"}], ":=", 
     RowBox[{"HShanSi", "[", 
      RowBox[{
       RowBox[{"PickP", "[", "G", "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"2", ",", "2"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "differential", " ", "conditional", " ", "von", " ", "Neumann", " ", "h", 
     RowBox[{"(", 
      RowBox[{"X_A", "|", "X_B"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HXAcXB", "[", "G_", "]"}], ":=", " ", 
     RowBox[{
      RowBox[{"HXAXB", "[", "G", "]"}], "-", " ", 
      RowBox[{"HXB", "[", "G", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", 
      RowBox[{"\[Equal]", "\[IndentingNewLine]", 
       RowBox[{
       "Number", " ", "of", " ", "Bits", " ", "for", " ", "Error", " ", 
        "Correction"}]}], "\[IndentingNewLine]", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "\[Equal]"}], "\[IndentingNewLine]", "*)"}], "Subsection"], 
   "\[IndentingNewLine]", " ", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{" ", "1", ")"}], " ", "Approximation", " ", "of", " ", "Number",
       " ", "of", " ", "bits", " ", "for", " ", "EC", " ", "for", " ", 
      "\[Delta]", 
      RowBox[{"<<", " ", "1"}]}], ":"}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ECApp", "[", 
     RowBox[{"\[Delta]_", ",", "\[CapitalGamma]_", ",", "\[Beta]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "\[Beta]"}], ")"}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"HXA", "[", "\[CapitalGamma]", "]"}], "+", 
          RowBox[{"HPA", "[", "\[CapitalGamma]", "]"}]}], ")"}], "/", "2"}]}],
       "+", 
      RowBox[{"\[Beta]", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"HXAXB", "[", "\[CapitalGamma]", "]"}], "+", 
          RowBox[{"HPAPB", "[", "\[CapitalGamma]", "]"}]}], ")"}], "/", 
        "2"}]}], "-", 
      RowBox[{"\[Beta]", "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"HXB", "[", "\[CapitalGamma]", "]"}], "+", 
          RowBox[{"HPB", "[", "\[CapitalGamma]", "]"}]}], ")"}], "/", "2"}]}],
       " ", "-", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", "\[Delta]"}], "]"}]}], "//", "N"}]}], 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"for", " ", "\[Delta]"}], "<", " ", "0.1"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"ECApp", "[", 
      RowBox[{"\[Delta]_", ",", "\[CapitalGamma]_", ",", "\[Beta]_"}], "]"}], 
     ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Beta]"}], ")"}], 
        RowBox[{"HXA", "[", "\[CapitalGamma]", "]"}]}], "+", 
       RowBox[{"\[Beta]", "*", 
        RowBox[{"HXAXB", "[", "\[CapitalGamma]", "]"}]}], "-", 
       RowBox[{"\[Beta]", "*", 
        RowBox[{"HXB", "[", "\[CapitalGamma]", "]"}]}], " ", "-", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"2", ",", "\[Delta]"}], "]"}]}], "//"}]}], "*)"}], "N", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"for", " ", "\[Delta]"}], "<", " ", "0.1"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{" ", "2", ")"}], " ", "Direct", " ", "computation", " ", "using",
      " ", "the", " ", "discretized", " ", 
     RowBox[{"entropies", ":"}]}], "*)"}], "\[IndentingNewLine]", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "probability", " ", "distributions", "\[IndentingNewLine]", 
     "input", " ", "\[CapitalGamma]", " ", "is", " ", "given", " ", "by", " ",
      "the", " ", "covariance", " ", "matrix", " ", 
     RowBox[{"GAB", "[", "...", "]"}]}], "\[IndentingNewLine]", " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PXAXB", "[", 
      RowBox[{"xA_", ",", "xB_", ",", "\[CapitalGamma]_"}], "]"}], ":=", 
     RowBox[{"Gauss", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xA", ",", "xB"}], "}"}], ",", 
       RowBox[{"PickX", "[", "\[CapitalGamma]", "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PXA", "[", 
      RowBox[{"xA_", ",", "\[CapitalGamma]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "Pi", "*", 
          RowBox[{
           RowBox[{"PickX", "[", "\[CapitalGamma]", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], ")"}]}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           RowBox[{
            RowBox[{"PickX", "[", "\[CapitalGamma]", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}], "*", 
        RowBox[{"xA", "^", "2"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PXB", "[", 
      RowBox[{"xB_", ",", "\[CapitalGamma]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"2", "Pi", "*", 
          RowBox[{
           RowBox[{"PickX", "[", "\[CapitalGamma]", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], ")"}]}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", 
         RowBox[{"(", 
          RowBox[{"2", "*", 
           RowBox[{
            RowBox[{"PickX", "[", "\[CapitalGamma]", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}]}], "*", 
        RowBox[{"xB", "^", "2"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ent", "[", "x_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"x", ">", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "12"}], ")"}]}]}], ",", 
      RowBox[{
       RowBox[{"-", "x"}], "*", 
       RowBox[{"Log", "[", 
        RowBox[{"2", ",", "x"}], "]"}]}], ",", "0"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HvN", "[", "\[Rho]_", "]"}], ":=", 
    RowBox[{"Tr", "[", 
     RowBox[{"ent", "/@", "\[Rho]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HvNN", "[", "\[Rho]_", "]"}], ":=", 
     RowBox[{"-", 
      RowBox[{"Tr", "[", 
       RowBox[{"\[Rho]", "*", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", "\[Rho]"}], "]"}]}], "]"}]}]}], ";"}], 
   RowBox[{"(*", 
    RowBox[{
    "works", " ", "also", " ", "in", " ", "the", " ", "classical", " ", 
     "case", " ", "where", " ", "\[Rho]", " ", "is", " ", "a", " ", "list"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"1", ")"}], " ", "Computation", " ", "of", " ", "H", 
     RowBox[{"(", "X_A", ")"}], " ", "in", " ", "the", " ", "discrete", " ", 
     "case", " ", 
     RowBox[{"(", 
      RowBox[{"\[Delta]", "=", "d"}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"i", "=", " ", "1"}], ",", "...", ",", 
     RowBox[{
      RowBox[{"2", "N", " ", "and", " ", "the", " ", 
       RowBox[{"interval", " ", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "d"}], "/", "2"}], ",", 
         RowBox[{"d", "/", "2"}]}], "]"}], " ", "is", " ", "at", " ", "i"}], 
      "=", "N"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Prob", "[", 
      RowBox[{"N_", ",", "d_", ",", "func_", ",", "i_"}], "]"}], ":=", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{"func", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"N", "-", 
              RowBox[{"1", "/", "2"}]}], ")"}]}], "*", "d"}], "+", 
          RowBox[{"d", "*", 
           RowBox[{"(", 
            RowBox[{"i", "-", "1"}], ")"}]}]}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"N", "-", 
              RowBox[{"1", "/", "2"}]}], ")"}]}], "*", "d"}], "+", 
          RowBox[{"d", "*", "i"}]}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ProbXA", "[", 
      RowBox[{"N_", ",", "d_", ",", "\[CapitalGamma]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"Prob", "[", 
        RowBox[{"N", ",", "d", ",", 
         RowBox[{"PXA", "[", 
          RowBox[{"t", ",", "\[CapitalGamma]"}], "]"}], ",", "#"}], "]"}], 
       "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"2", "N"}], "+", "1"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ProbXB", "[", 
      RowBox[{"N_", ",", "d_", ",", "\[CapitalGamma]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"Prob", "[", 
        RowBox[{"N", ",", "d", ",", 
         RowBox[{"PXB", "[", 
          RowBox[{"t", ",", "\[CapitalGamma]"}], "]"}], ",", "#"}], "]"}], 
       "&"}], "/@", 
      RowBox[{"Range", "[", 
       RowBox[{
        RowBox[{"2", "N"}], "+", "1"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HdiscXA", "[", 
      RowBox[{"\[CapitalGamma]_", ",", "d_"}], "]"}], ":=", 
     RowBox[{"HvN", "[", 
      RowBox[{"ProbXA", "[", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"25", "/", "d"}], "]"}], ",", "d", ",", "\[CapitalGamma]"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HdiscXB", "[", 
      RowBox[{"\[CapitalGamma]_", ",", "d_"}], "]"}], ":=", 
     RowBox[{"HvN", "[", 
      RowBox[{"ProbXB", "[", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"25", "/", "d"}], "]"}], ",", "d", ",", "\[CapitalGamma]"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{" ", "2", ")"}], " ", "Computation", " ", "of", " ", "H", 
     RowBox[{"(", 
      RowBox[{"X_A", "|", "X_B"}], ")"}], " ", "in", " ", "discrete", " ", 
     RowBox[{"case", ":"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ProbXY", "[", 
      RowBox[{"N_", ",", "d_", ",", "\[CapitalGamma]_"}], "]"}], ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"Gauss", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"s", ",", "t"}], "}"}], ",", 
            RowBox[{"PickX", "[", "\[CapitalGamma]", "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"N", "-", 
                 RowBox[{"1", "/", "2"}]}], ")"}]}], "*", "d"}], "+", 
             RowBox[{"d", "*", 
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}]}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"N", "-", 
                 RowBox[{"1", "/", "2"}]}], ")"}]}], "*", "d"}], "+", 
             RowBox[{"d", "*", "i"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"N", "-", 
                 RowBox[{"1", "/", "2"}]}], ")"}]}], "*", "d"}], "+", 
             RowBox[{"d", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "j"}], ")"}], "-", "1"}], ")"}]}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"N", "-", 
                 RowBox[{"1", "/", "2"}]}], ")"}]}], "*", "d"}], "+", 
             RowBox[{"d", "*", 
              RowBox[{"(", 
               RowBox[{"i", "-", "j"}], ")"}]}]}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"2", "N"}], "+", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"-", 
           RowBox[{"Floor", "[", 
            RowBox[{"4", "/", "d"}], "]"}]}], ",", 
          RowBox[{"Floor", "[", 
           RowBox[{"4", "/", "d"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HdiscXY", "[", 
      RowBox[{"d_", ",", "\[CapitalGamma]_"}], "]"}], ":=", 
     RowBox[{"HvN", "[", 
      RowBox[{"ProbXY", "[", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"30", "/", "d"}], "]"}], ",", "d", ",", "\[CapitalGamma]"}], 
       "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ECdisc", "[", 
     RowBox[{"d_", ",", "\[CapitalGamma]_", ",", "\[Beta]_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"\[Beta]", "==", "1"}], ",", 
      RowBox[{
       RowBox[{"HdiscXY", "[", 
        RowBox[{"d", ",", "\[CapitalGamma]"}], "]"}], "-", 
       RowBox[{"HdiscXB", "[", 
        RowBox[{"\[CapitalGamma]", ",", "d"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Beta]"}], ")"}], 
        RowBox[{"HdiscXA", "[", 
         RowBox[{"\[CapitalGamma]", ",", "d"}], "]"}]}], "+", 
       RowBox[{"\[Beta]", "*", 
        RowBox[{"HdiscXY", "[", 
         RowBox[{"d", ",", "\[CapitalGamma]"}], "]"}]}], "-", 
       RowBox[{"\[Beta]", "*", 
        RowBox[{"HdiscXB", "[", 
         RowBox[{"\[CapitalGamma]", ",", "d"}], "]"}]}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"for", " ", "symmetric", " ", "losses"}], ",", " ", 
     RowBox[{"i", ".", "e", "."}], ",", " ", 
     RowBox[{"HXA", "=", "HXB"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ECSym", "[", 
      RowBox[{"d_", ",", "\[CapitalGamma]_", ",", "\[Beta]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", "\[Beta]"}]}], ")"}], 
        RowBox[{"HdiscXA", "[", 
         RowBox[{"\[CapitalGamma]", ",", "d"}], "]"}]}], "+", 
       RowBox[{"\[Beta]", "*", 
        RowBox[{"HdiscXY", "[", 
         RowBox[{"d", ",", "\[CapitalGamma]"}], "]"}]}]}], "//", "N"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EC", "[", 
     RowBox[{"d_", ",", "\[CapitalGamma]_", ",", "\[Beta]_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"d", "\[LessEqual]", " ", "0.4"}], ",", 
      RowBox[{"ECApp", "[", 
       RowBox[{"d", ",", "\[CapitalGamma]", ",", "\[Beta]"}], "]"}], ",", 
      RowBox[{"ECdisc", "[", 
       RowBox[{"d", ",", "\[CapitalGamma]", ",", "\[Beta]"}], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
        "===", "===", "===", "===", "===", "===", "==="}], "=", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
        "Capacity", " ", "of", " ", "phase", " ", "insensitive", " ", 
         "channels"}], "\[IndentingNewLine]", "===", "===", "===", "===", "===",
         "===", "===", "===", "===", "===", "===", "===", "===", "==="}], 
       "="}]}], "\[IndentingNewLine]", "*)"}], "Subsection"], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gg", "[", "x_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"x", "+", "1"}], ")"}], 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}]}], "]"}]}], "-", 
     RowBox[{"x", "*", 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", "x"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"gg2", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", "x", "]"}], "<", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "8"}], ")"}]}]}], ",", "0", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "+", "1"}], ")"}], 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"(", 
           RowBox[{"x", "+", "1"}], ")"}]}], "]"}]}], "-", 
       RowBox[{"x", "*", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", "x"}], "]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CapCl", "[", 
     RowBox[{"t_", ",", "v_", ",", "Nmax_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"gg2", "[", 
      RowBox[{
       RowBox[{"t", "*", "Nmax"}], " ", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"t", "+", "v", "-", "1"}], ")"}], "/", "2"}]}], "]"}], " ", 
     "-", 
     RowBox[{"gg2", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"t", "+", "v", "-", "1"}], ")"}], "/", "2"}], "]"}]}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "thermal", " ", "channel", " ", "with", " ", "transmissvity", " ", "eta", 
     " ", "and", " ", "thermal", " ", "state", " ", "with", " ", "photon", 
     " ", "mean", " ", "Nmean", " ", "and", " ", "white", " ", "additive", 
     " ", "noise", " ", "Vn"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ttherm", "[", 
     RowBox[{"eta_", ",", "Nmean_", ",", "Vn_"}], "]"}], ":=", "eta"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vtherm", "[", 
     RowBox[{"eta_", ",", "Nmean_", ",", "Vn_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "eta"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"2", "Nmean"}]}], ")"}]}], "+", "Vn"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CapCltherm", "[", 
     RowBox[{"eta_", ",", "Nmean_", ",", "Vn_", ",", "Nmax_"}], "]"}], ":=", 
    RowBox[{"CapCl", "[", 
     RowBox[{
      RowBox[{"ttherm", "[", 
       RowBox[{"eta", ",", "Nmean", ",", "Vn"}], "]"}], ",", 
      RowBox[{"vtherm", "[", 
       RowBox[{"eta", ",", "Nmean", ",", "Vn"}], "]"}], ",", "Nmax"}], 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "\[IndentingNewLine]", " ", 
      RowBox[{
      "Typical", " ", "Set", " ", "for", " ", "Bit", " ", "Commitment"}], 
      "\[IndentingNewLine]", "===", "===", "===", "===", "===", "===", "===", 
      "===", "===", "===", "===", "===", "===", "===", "===", "==="}], " ", 
     "*)"}], "Subsection"], 
   StyleBox[" ", "Subsection"], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "log", " ", "of", " ", "size", " ", "is", " ", "given", " ", "by", " ", 
      "the", " ", "conditional", " ", "entropy", " ", "with", " ", 
      RowBox[{"discretization", " ", "\\", "sqrt"}], " ", 
      RowBox[{"TB", " ", "\\", "delta"}], " ", 
      RowBox[{"and", " ", "\\", "delta"}], "\[IndentingNewLine]", "LTyp"}], 
     " ", "=", " ", 
     RowBox[{
      RowBox[{
      "log", " ", "of", " ", "the", " ", "size", "\[IndentingNewLine]", 
       RowBox[{"EPRlossB", "[", 
        RowBox[{"V_", ",", "TB_", ",", "xi_"}], "]"}]}], ":=", 
      RowBox[{"G", "[", 
       RowBox[{"V", ",", "1", ",", "0", ",", 
        RowBox[{"1", "-", "TB"}], ",", "0", ",", "xi"}], "]"}]}]}], 
    "\[IndentingNewLine]", " ", "*)"}], "\[IndentingNewLine]", " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ProbXY", "[", 
      RowBox[{"N_", ",", "dx_", ",", "dy_", ",", "\[CapitalGamma]_"}], "]"}], 
     ":=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"NIntegrate", "[", 
         RowBox[{
          RowBox[{"Gauss", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"s", ",", "t"}], "}"}], ",", 
            RowBox[{"PickX", "[", "\[CapitalGamma]", "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"N", "-", 
                 RowBox[{"1", "/", "2"}]}], ")"}]}], "*", "dx"}], "+", 
             RowBox[{"dx", "*", 
              RowBox[{"(", 
               RowBox[{"i", "-", "1"}], ")"}]}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"N", "-", 
                 RowBox[{"1", "/", "2"}]}], ")"}]}], "*", "dx"}], "+", 
             RowBox[{"dx", "*", "i"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"t", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"N", "-", 
                 RowBox[{"1", "/", "2"}]}], ")"}]}], "*", "dy"}], "+", 
             RowBox[{"dy", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"i", "-", "j"}], ")"}], "-", "1"}], ")"}]}]}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"N", "-", 
                 RowBox[{"1", "/", "2"}]}], ")"}]}], "*", "dy"}], "+", 
             RowBox[{"dy", "*", 
              RowBox[{"(", 
               RowBox[{"i", "-", "j"}], ")"}]}]}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{
           RowBox[{"2", "N"}], "+", "1"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", 
          RowBox[{"-", 
           RowBox[{"Floor", "[", 
            RowBox[{"4", "/", "dy"}], "]"}]}], ",", 
          RowBox[{"Floor", "[", 
           RowBox[{"4", "/", "dy"}], "]"}]}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"HdiscXY", "[", 
      RowBox[{"dx_", ",", "dy_", ",", "\[CapitalGamma]_"}], "]"}], ":=", 
     RowBox[{"HvN", "[", 
      RowBox[{"ProbXY", "[", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"30", "/", "dy"}], "]"}], ",", "dx", ",", "dy", ",", 
        "\[CapitalGamma]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HdiscXgivenY", "[", 
     RowBox[{"dx_", ",", "dy_", ",", "\[CapitalGamma]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"HdiscXY", "[", 
      RowBox[{"dx", ",", "dy", ",", "\[CapitalGamma]"}], "]"}], "-", 
     RowBox[{"HdiscXA", "[", 
      RowBox[{"\[CapitalGamma]", ",", "dx"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Depending", " ", "on", " ", "the", " ", "CM"}], " ", 
      "\[IndentingNewLine]", "-", " ", "\[Tau]B"}], " ", "=", " ", 
     RowBox[{"the", " ", "scaling", " ", "factor", " ", "of", " ", 
      RowBox[{"Bob", "'"}], "s", " ", "outcomes"}]}], " ", 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rTypApp", "[", 
      RowBox[{"d_", ",", "G_", ",", "\[Tau]B_"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"HXAXB", "[", "G", "]"}], "-", 
       RowBox[{"HXA", "[", "G", "]"}], " ", "-", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"2", ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", "\[Tau]B", "]"}], "*", "d"}]}], "]"}]}], " ", "//",
       "N"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rTypdisc", "[", 
     RowBox[{"d_", ",", "G_", ",", "\[Tau]B_"}], "]"}], ":=", 
    RowBox[{"HdiscXgivenY", "[", 
     RowBox[{"d", ",", 
      RowBox[{"d", "*", 
       RowBox[{"Sqrt", "[", "\[Tau]B", "]"}]}], ",", "G"}], "]"}]}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rTyp", "[", 
     RowBox[{"d_", ",", "G_", ",", "\[Tau]B_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"d", "\[LessEqual]", " ", "0.15"}], ",", 
      RowBox[{"rTypApp", "[", 
       RowBox[{"d", ",", "G", ",", "\[Tau]B"}], "]"}], ",", 
      RowBox[{"rTypdisc", "[", 
       RowBox[{"d", ",", "G", ",", "\[Tau]B"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rTypAppP", "[", 
      RowBox[{"V_", ",", "TB_", ",", "xi_", ",", "d_"}], "]"}], ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"HXAXB", "[", 
        RowBox[{"EPRlossB", "[", 
         RowBox[{"V", ",", "TB", ",", "xi"}], "]"}], "]"}], "-", 
       RowBox[{"HXA", "[", 
        RowBox[{"EPRlossB", "[", 
         RowBox[{"V", ",", "TB", ",", "xi"}], "]"}], "]"}], " ", "-", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"2", ",", 
         RowBox[{
          RowBox[{"Sqrt", "[", "TB", "]"}], "*", "d"}]}], "]"}]}], " ", "//", 
      "N"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rTypdiscP", "[", 
     RowBox[{"V_", ",", "TB_", ",", "xi_", ",", "d_"}], "]"}], ":=", 
    RowBox[{"HdiscXgivenY", "[", 
     RowBox[{"d", ",", 
      RowBox[{"d", "*", 
       RowBox[{"Sqrt", "[", "TB", "]"}]}], ",", 
      RowBox[{"EPRlossB", "[", 
       RowBox[{"V", ",", "TB", ",", "xi"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"HdiscXY", "[", 
      RowBox[{"d", ",", 
       RowBox[{"d", "*", 
        RowBox[{"Sqrt", "[", "TB", "]"}]}], ",", 
       RowBox[{"EPRlossB", "[", 
        RowBox[{"V", ",", "TB", ",", "xi"}], "]"}]}], "]"}], "-", 
     RowBox[{"HdiscXA", "[", 
      RowBox[{
       RowBox[{"EPRlossB", "[", 
        RowBox[{"V", ",", "TB", ",", "xi"}], "]"}], ",", "d"}], "]"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rTypP", "[", 
     RowBox[{"V_", ",", "TB_", ",", "xi_", ",", "d_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"d", "\[LessEqual]", " ", "0.15"}], ",", 
      RowBox[{"rTypAppP", "[", 
       RowBox[{"V", ",", "TB", ",", "xi", ",", "d"}], "]"}], ",", 
      RowBox[{"rTypdiscP", "[", 
       RowBox[{"V", ",", "TB", ",", "xi", ",", "d"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
        "===", "===", "===", "===", "===", "===", "===", "===", "===", 
       RowBox[{"\[Equal]", 
        RowBox[{
        "\\\\", "\[IndentingNewLine]", "Uncertainty", " ", "Bound", " ", 
         "under", " ", "iid", " ", "assumptions", " ", "\[IndentingNewLine]", 
         "mB"}]}]}], "=", 
      RowBox[{
       RowBox[{
       "number", " ", "of", " ", "bits", " ", "Bob", " ", "can", " ", 
        "coherently", " ", "encode", " ", "\[IndentingNewLine]", "Vepr"}], 
       "=", 
       RowBox[{
        RowBox[{
        "variance", " ", "of", " ", "the", " ", "virtual", " ", "EPR", " ", 
         "pair"}], " ", "=", " ", 
        RowBox[{
         RowBox[{"variance", " ", "of", " ", 
          RowBox[{"Alice", "'"}], "s", " ", "X", " ", "variable"}], "  ", 
         "\[IndentingNewLine]", "===", "===", "===", "===", "===", "===", "===",
          "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
          "===", "===", "===", "=="}]}]}]}], "*)"}], "Subsection"], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]", "[", 
      RowBox[{"\[Gamma]_", ",", "n_"}], "]"}], ":=", 
     FractionBox[
      RowBox[{"2", " ", "\[Gamma]", " ", 
       SuperscriptBox[
        RowBox[{"Re", "[", 
         RowBox[{"SpheroidalS1", "[", 
          RowBox[{"n", ",", "0", ",", "\[Gamma]", ",", "1"}], "]"}], "]"}], 
        "2"]}], "\[Pi]"]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"QM", " ", "side", " ", "info", " ", "bound"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"c1", "[", "\[Delta]_", "]"}], ":=", 
     RowBox[{"N", "[", 
      RowBox[{"\[Lambda]", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Delta]", "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", "*", "hbar"}], ")"}]}], ",", "0"}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c0", "[", "\[Delta]_", "]"}], ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Delta]", "^", "2"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "hbar", "*", " ", "\[Pi]"}], ")"}]}], ")"}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "[", "\[Delta]_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"\[Delta]", "\[LessEqual]", " ", "1.5"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Delta]", "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "hbar", "*", " ", "\[Pi]"}], ")"}]}], ")"}], " ", 
      ",", 
      RowBox[{"N", "[", 
       RowBox[{"\[Lambda]", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Delta]", "^", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"4", "*", "hbar"}], ")"}]}], ",", "0"}], "]"}], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"classical", " ", "side", " ", "info", " ", "bound"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cCl", "[", "\[Delta]_", "]"}], ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Delta]", "^", "2"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Exp", "[", "1", "]"}], "*", "hbar", "*", " ", "\[Pi]"}], 
       ")"}]}], ")"}]}], " ", 
   RowBox[{"(*", 
    RowBox[{"bound", " ", "for", " ", "classical", " ", "side", " ", "info"}],
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cCl0", "[", "\[Delta]_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"\[Delta]", "\[LessEqual]", " ", "1.5"}], ",", 
      RowBox[{"cCl", "[", "\[Delta]", "]"}], ",", 
      RowBox[{"Min", "[", 
       RowBox[{
        RowBox[{"cCl", "[", "\[Delta]", "]"}], ",", 
        RowBox[{"c1", "[", "\[Delta]", "]"}]}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"old", "\[IndentingNewLine]", 
      RowBox[{"etaf", "[", 
       RowBox[{"\[Delta]_", ",", "mB_", ",", "Vepr_"}], "]"}]}], ":=", 
     RowBox[{
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"2", "^", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"mB", "/", "2"}], "*", 
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"2", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"2", "*", "Pi", "*", "Vepr"}], "]"}]}]}], "]"}]}], 
          ")"}]}], "\[IndentingNewLine]", 
        RowBox[{"Biid", "[", 
         RowBox[{
         "\[Delta]_", ",", "n_", ",", "mB_", ",", "\[Epsilon]2_", ",", 
          "Vepr_"}], "]"}]}]}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", "1"}], "/", "2"}], 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"cCl", "[", "\[Delta]", "]"}]}], "]"}]}], "-", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"mB", "/", "n"}], "]"}], "2", "*", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"etaf", "[", 
           RowBox[{"\[Delta]", ",", "mB", ",", "Vepr"}], "]"}]}], "]"}], "*", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"Log", "[", 
          RowBox[{"2", ",", 
           RowBox[{"2", "/", 
            RowBox[{"\[Epsilon]2", "^", "2"}]}]}], "]"}], "]"}]}]}]}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"etaf", "[", 
     RowBox[{"\[Delta]_", ",", "mB_", ",", "Vepr_"}], "]"}], ":=", 
    RowBox[{"2", "+", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"mB", "/", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"2", "*", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"2", "*", "Pi", "*", "Vepr"}], "]"}]}]}], "]"}], "-", 
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", "\[Delta]"}], "]"}]}], ")"}]}], ")"}]}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Biid", "[", 
     RowBox[{
     "\[Delta]_", ",", "n_", ",", "G_", ",", "mB_", ",", "\[Epsilon]_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"cCl", "[", "\[Delta]", "]"}]}], "]"}]}], "-", 
     RowBox[{"4", "*", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"mB", "/", "n"}], "]"}], "*", 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"etaf", "[", 
         RowBox[{"\[Delta]", ",", "mB", ",", 
          RowBox[{"G", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], "*", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"Log", "[", 
        RowBox[{"2", ",", 
         RowBox[{"2", "/", 
          RowBox[{"\[Epsilon]", "^", "2"}]}]}], "]"}], "]"}]}]}]}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BiidLimit", "[", "d_", "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "/", "2"}], 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"cCl", "[", "d", "]"}]}], "]"}]}]}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"limit", " ", "for", " ", "n"}], "\[Rule]", "\[Infinity]"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"riid", "[", 
     RowBox[{
     "\[Delta]_", ",", "G_", ",", "n_", ",", "mB_", ",", "\[Epsilon]2_", ",", 
      "\[Beta]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Biid", "[", 
        RowBox[{"\[Delta]", ",", "n", ",", "mB", ",", "\[Epsilon]2", ",", 
         RowBox[{
          RowBox[{"PickA", "[", "G", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}], " ", "-", " ", 
       RowBox[{"EC", "[", 
        RowBox[{"\[Delta]", ",", "G", ",", "\[Beta]"}], "]"}]}], ")"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", " ", 
     RowBox[{"For", " ", "OT", " ", "Protocol"}], " ", "*)"}], "Subtitle"], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rOTiid1", "[", 
     RowBox[{
     "\[Delta]_", ",", "n_", ",", "G_", ",", "mB_", ",", "epsA_", ",", 
      "eps\[Alpha]_", ",", "eps1_", ",", "eps2_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Biid", "[", 
        RowBox[{"\[Delta]", ",", "n", ",", "G", ",", "mB", ",", 
         RowBox[{"eps2", "-", "eps\[Alpha]"}]}], "]"}], " ", "-", " ", 
       RowBox[{
        RowBox[{"2", "/", "n"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"1", "/", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"eps1", "-", "eps2"}], ")"}], "^", "2"}]}]}], "]"}], 
          "+", "1"}], ")"}]}]}], ")"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rOTiid1", "[", 
     RowBox[{
     "\[Delta]_", ",", "n_", ",", "G_", ",", "mB_", ",", "epsA_", ",", 
      "eps\[Alpha]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"Maximize", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"rOTiid1", "[", 
          RowBox[{
          "\[Delta]", ",", "n", ",", "G", ",", "mB", ",", "epsA", ",", 
           "eps\[Alpha]", ",", 
           RowBox[{"epsA", "/", "5"}], ",", "\[Epsilon]2"}], "]"}], ",", 
         RowBox[{"eps\[Alpha]", "<", "\[Epsilon]2", "<", 
          RowBox[{"epsA", "/", "5"}]}]}], "}"}], ",", "\[Epsilon]2"}], "]"}], 
     "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rOTiid1\[Alpha]", "[", 
     RowBox[{
     "\[Delta]_", ",", "n_", ",", "G_", ",", "mB_", ",", "epsA_", ",", 
      "\[Alpha]_"}], "]"}], ":=", 
    RowBox[{"rOTiid1", "[", 
     RowBox[{"\[Delta]", ",", "n", ",", "G", ",", "mB", ",", "epsA", ",", 
      RowBox[{"eps\[Alpha]", "[", 
       RowBox[{"G", ",", "\[Alpha]", ",", "n"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rOTiid", "[", 
     RowBox[{
     "\[Delta]_", ",", "n_", ",", "G_", ",", "\[Beta]_", ",", "mB_", ",", 
      "epsA_", ",", "\[Alpha]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"rOTiid1\[Alpha]", "[", 
      RowBox[{
      "\[Delta]", ",", "n", ",", "G", ",", "mB", ",", "epsA", ",", 
       "\[Alpha]"}], "]"}], "-", 
     RowBox[{
      RowBox[{"1", "/", "2"}], 
      RowBox[{"EC", "[", 
       RowBox[{"\[Delta]", ",", "G", ",", "\[Beta]"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lOTiid", "[", 
     RowBox[{
     "\[Delta]_", ",", "n_", ",", "G_", ",", "\[Beta]_", ",", "mB_", ",", 
      "epsA_", ",", "\[Alpha]_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_", 
      ",", "Nmean_", ",", "Vnoise_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"rOTiid", "[", 
         RowBox[{
         "\[Delta]", ",", "n", ",", "G", ",", "\[Beta]", ",", "mB", ",", 
          "epsA", ",", "\[Alpha]"}], "]"}], " ", "-", " ", 
        RowBox[{"\[Nu]", "*", 
         RowBox[{"CapCltherm", "[", 
          RowBox[{"eta", ",", "Nmean", ",", "Vnoise", ",", "Nmax"}], 
          "]"}]}]}], ")"}]}], " ", "-", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"2", ",", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"epsA", "-", 
          RowBox[{"4", "*", 
           RowBox[{"(", 
            RowBox[{"epsA", "/", "5"}], ")"}]}]}], ")"}]}]}], "]"}]}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lOTiid", "[", 
     RowBox[{
     "\[Delta]_", ",", "n_", ",", "G_", ",", "\[Beta]_", ",", "mB_", ",", 
      "epsA_", ",", "\[Alpha]_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_"}], 
     "]"}], ":=", " ", 
    RowBox[{"lOTiid", "[", 
     RowBox[{
     "\[Delta]", ",", "n", ",", "G", ",", "\[Beta]", ",", "mB", ",", "epsA", 
      ",", "\[Alpha]", ",", "\[Nu]", ",", "Nmax", ",", "eta", ",", "0", ",", 
      "0"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rateOTiid", "[", 
     RowBox[{
     "\[Delta]_", ",", "n_", ",", "G_", ",", "\[Beta]_", ",", "mB_", ",", 
      "epsA_", ",", "\[Alpha]_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_", 
      ",", "Nmean_", ",", "Vnoise_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"rOTiid", "[", 
         RowBox[{
         "\[Delta]", ",", "n", ",", "G", ",", "\[Beta]", ",", "mB", ",", 
          "epsA", ",", "\[Alpha]"}], "]"}], " ", "-", " ", 
        RowBox[{"\[Nu]", "*", 
         RowBox[{"CapCltherm", "[", 
          RowBox[{"eta", ",", "Nmean", ",", "Vnoise", ",", "Nmax"}], 
          "]"}]}]}], ")"}]}], " ", "-", 
     RowBox[{
      RowBox[{"1", "/", "n"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"epsA", "-", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"epsA", "/", "5"}], ")"}]}]}], ")"}]}]}], "]"}]}]}]}], 
   " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rateOTiid", "[", 
     RowBox[{
     "\[Delta]_", ",", "n_", ",", "G_", ",", "\[Beta]_", ",", "mB_", ",", 
      "epsA_", ",", "\[Alpha]_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_"}], 
     "]"}], ":=", " ", 
    RowBox[{"rateOTiid", "[", 
     RowBox[{
     "\[Delta]", ",", "n", ",", "G", ",", "\[Beta]", ",", "mB", ",", "epsA", 
      ",", "\[Alpha]", ",", "\[Nu]", ",", "Nmax", ",", "eta", ",", "0", ",", 
      "0"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", " ", 
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", 
      RowBox[{"\[Equal]", "\[IndentingNewLine]", 
       RowBox[{"Gaussian", " ", "Bound"}]}]}], " ", "\[IndentingNewLine]", 
     "*)"}], "Subsection"], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bGauss", "[", 
      RowBox[{"a_", ",", "dq_", ",", "dp_"}], "]"}], ":=", 
     RowBox[{"1", "+", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "Pi"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}]}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "/", "a"}], ")"}], "*", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"dq", "*", 
          RowBox[{"dp", "/", "hbar"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"a", "-", "1"}], ")"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"bGauss", "[", 
      RowBox[{"a_", ",", "d_"}], "]"}], ":=", 
     RowBox[{"bGauss", "[", 
      RowBox[{"a", ",", "d", ",", "d"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BGauss", "[", 
     RowBox[{"a_", ",", "d_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", 
      RowBox[{"(", 
       RowBox[{"a", "-", "1"}], ")"}]}], 
     RowBox[{"Log", "[", 
      RowBox[{"2", ",", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"bGauss", "[", 
         RowBox[{"a", ",", "d"}], "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"UR", " ", "bound", " ", "for", " ", "Gauss"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]G", "[", 
     RowBox[{"a_", ",", "d_", ",", "n_", ",", "eps_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"BGauss", "[", 
      RowBox[{"a", ",", "d"}], "]"}], " ", "-", " ", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"n", 
         RowBox[{"(", 
          RowBox[{"a", "-", "1"}], ")"}]}], ")"}]}], 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"2", "/", 
         RowBox[{"eps", "^", "2"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"eps\[Alpha]", " ", "=", " ", 
     RowBox[{"The", " ", "cutoff", " ", "\[Epsilon]"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Lambda]Gauss", "[", 
     RowBox[{"a_", ",", "d_", ",", "n_", ",", "eps2_", ",", "eps\[Alpha]_"}], 
     "]"}], ":=", 
    RowBox[{"\[Lambda]G", "[", 
     RowBox[{"a", ",", "d", ",", "n", ",", 
      RowBox[{"eps2", "-", "eps\[Alpha]"}]}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", " ", 
     RowBox[{"OT", " ", "with", " ", "Gaussian", " ", "Bound"}], " ", "*)"}], 
    "Subsection"], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"rOT", " ", "=", " ", 
     RowBox[{"rGauss", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"1", "/", "2"}], 
        RowBox[{"(", 
         RowBox[{"rG", " ", "-", " ", "rEC"}], ")"}]}], " ", "-", " ", 
       "C"}]}]}], "  ", "*)"}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rG0", "[", 
     RowBox[{
     "a_", ",", "d_", ",", "n_", ",", "eps1_", ",", "eps2_", ",", 
      "eps\[Alpha]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"\[Lambda]Gauss", "[", 
      RowBox[{"a", ",", "d", ",", "n", ",", "eps2", ",", "eps\[Alpha]"}], 
      "]"}], "-", " ", 
     RowBox[{
      RowBox[{"2", "/", "n"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"1", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"eps1", "-", "eps2"}], ")"}], "^", "2"}]}]}], "]"}], "+",
         "1"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"choose", " ", "eps1"}], " ", "=", " ", 
     RowBox[{"epsA", "/", "5"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rG", "[", 
     RowBox[{
     "a_", ",", "d_", ",", "n_", ",", "epsA_", ",", "eps2_", ",", 
      "eps\[Alpha]_"}], "]"}], ":=", 
    RowBox[{"rG0", "[", 
     RowBox[{"a", ",", "d", ",", "n", ",", 
      RowBox[{"epsA", "/", "5"}], ",", "eps2", ",", "eps\[Alpha]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"optimize", " ", "over", " ", "eps2", " ", "and", " ", "a"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rGmax", "[", 
     RowBox[{"d_", ",", "n_", ",", "\[Epsilon]A_", ",", "eps\[Alpha]_"}], 
     "]"}], ":=", 
    RowBox[{"Maximize", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rG", "[", 
         RowBox[{
         "aa", ",", "d", ",", "n", ",", "\[Epsilon]A", ",", "\[Epsilon]", ",",
           "eps\[Alpha]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"eps\[Alpha]", "<", "\[Epsilon]", "<", 
          RowBox[{"\[Epsilon]A", "/", "5"}]}], " ", "&&", " ", 
         RowBox[{"1", "<", "aa", "<", "2"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"aa", ",", "\[Epsilon]"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rG", "[", 
     RowBox[{"d_", ",", "n_", ",", "\[Epsilon]A_", ",", "eps\[Alpha]_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{"rGmax", "[", 
      RowBox[{"d", ",", "n", ",", "\[Epsilon]A", ",", "eps\[Alpha]"}], "]"}], 
     "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rG\[Alpha]", "[", 
     RowBox[{
     "d_", ",", "n_", ",", "\[Epsilon]A_", ",", "G_", ",", "\[Alpha]_"}], 
     "]"}], ":=", 
    RowBox[{"rG", "[", 
     RowBox[{"d", ",", "n", ",", "\[Epsilon]A", ",", 
      RowBox[{"eps\[Alpha]", "[", 
       RowBox[{"G", ",", "\[Alpha]", ",", "n"}], "]"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rGaussf", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "\[Beta]_", ",", "n_", ",", "\[Epsilon]A_", ",", 
      "\[Alpha]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"rG\[Alpha]", "[", 
        RowBox[{
        "d", ",", "n", ",", "\[Epsilon]A", ",", "G", ",", "\[Alpha]"}], "]"}],
        "-", " ", 
       RowBox[{"EC", "[", 
        RowBox[{"d", ",", "G", ",", "\[Beta]"}], "]"}]}], "  ", ")"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rGaussf", "[", 
     RowBox[{"d_", ",", "G_", ",", "\[Beta]_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"rGaussf", "[", 
     RowBox[{
     "d", ",", "G", ",", "\[Beta]", ",", "n", ",", "\[Epsilon]A0", ",", 
      "\[Alpha]0"}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rGaussfexp", "[", 
     RowBox[{
     "\[Delta]_", ",", "G_", ",", "n_", ",", "\[Epsilon]A_", ",", "\[Alpha]_",
       ",", "rEC_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"rG\[Alpha]", "[", 
        RowBox[{
        "\[Delta]", ",", "n", ",", "\[Epsilon]A", ",", "G", ",", "\[Alpha]"}],
         "]"}], "-", " ", "rEC"}], "  ", ")"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", " ", "\[IndentingNewLine]", 
     RowBox[{"Gaussian", " ", "Bound", " ", "applied", " ", "to", " ", "OT"}],
      "\[IndentingNewLine]", "*)"}], "Subsubsection"], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "the", " ", "lenth", " ", "of", " ", "the", " ", "bit", " ", "string", 
       " ", "for", " ", "OT", " ", "for", " ", "a", " ", "qm", " ", "memory", 
       " ", "with", " ", "\[Nu]", " ", "Gaussian", " ", "bosonic", " ", 
       "channels", " ", "with"}], "\[IndentingNewLine]", "-", " ", "Nmax"}], 
     " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
       "max", " ", "photon", " ", "number", " ", "of", " ", "code", " ", 
        "words"}], " ", "\[IndentingNewLine]", "-", " ", "Nmean"}], " ", "=", 
      " ", 
      RowBox[{
       RowBox[{
        RowBox[{
        "mean", " ", "occupation", " ", "number", " ", "of", " ", "the", " ", 
         "thermal", " ", "noise"}], "\[IndentingNewLine]", "-", " ", 
        "Vnoise"}], " ", "=", " ", 
       RowBox[{"additional", " ", "noise", " ", "variance"}]}]}]}], " ", 
    "\[IndentingNewLine]", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lOTgauss", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "\[Beta]_", ",", "n_", ",", "\[Epsilon]A_", ",", 
      "\[Alpha]_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_", ",", "Nmean_", 
      ",", "Vnoise_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"rGaussf", "[", 
         RowBox[{
         "d", ",", "G", ",", "\[Beta]", ",", "n", ",", "\[Epsilon]A", ",", 
          "\[Alpha]"}], "]"}], " ", "-", " ", 
        RowBox[{"\[Nu]", "*", 
         RowBox[{"CapCltherm", "[", 
          RowBox[{"eta", ",", "Nmean", ",", "Vnoise", ",", "Nmax"}], 
          "]"}]}]}], ")"}]}], " ", "-", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"2", ",", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]A", "-", 
          RowBox[{"4", "*", 
           RowBox[{"(", 
            RowBox[{"\[Epsilon]A", "/", "5"}], ")"}]}]}], ")"}]}]}], 
      "]"}]}]}], " ", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "rateL", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rateOTgauss", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "\[Beta]_", ",", "n_", ",", "\[Epsilon]A_", ",", 
      "\[Alpha]_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_", ",", "Nmean_", 
      ",", "Vnoise_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"rGaussf", "[", 
         RowBox[{
         "d", ",", "G", ",", "\[Beta]", ",", "n", ",", "\[Epsilon]A", ",", 
          "\[Alpha]"}], "]"}], " ", "-", " ", 
        RowBox[{"\[Nu]", " ", 
         RowBox[{"CapCltherm", "[", 
          RowBox[{"eta", ",", "Nmean", ",", "Vnoise", ",", "Nmax"}], 
          "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"1", "/", "n"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"\[Epsilon]A", "-", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"\[Epsilon]A", "/", "5"}], ")"}]}]}], ")"}]}]}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "experiment", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lOTgaussExp", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "n_", ",", "\[Epsilon]A_", ",", "\[Alpha]_", ",", 
      "rEC_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_", ",", "Nmean_", ",", 
      "Vnoise_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"rGaussfexp", "[", 
         RowBox[{
         "\[Delta]", ",", "G", ",", "n", ",", "\[Epsilon]A", ",", "\[Alpha]", 
          ",", "rEC"}], "]"}], " ", "-", " ", 
        RowBox[{"\[Nu]", "*", 
         RowBox[{"CapCltherm", "[", 
          RowBox[{"eta", ",", "Nmean", ",", "Vnoise", ",", "Nmax"}], 
          "]"}]}]}], ")"}]}], " ", "-", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"2", ",", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]A", "-", 
          RowBox[{"4", "*", 
           RowBox[{"(", 
            RowBox[{"\[Epsilon]A", "/", "5"}], ")"}]}]}], ")"}]}]}], 
      "]"}]}]}], " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rateOTgaussExp", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "n_", ",", "\[Epsilon]A_", ",", "\[Alpha]_", ",", 
      "rEC_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_", ",", "Nmean_", ",", 
      "Vnoise_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"rGaussfexp", "[", 
         RowBox[{
         "d", ",", "G", ",", "n", ",", "\[Epsilon]A", ",", "\[Alpha]", ",", 
          "rEC"}], "]"}], " ", "-", " ", 
        RowBox[{"\[Nu]", " ", 
         RowBox[{"CapCltherm", "[", 
          RowBox[{"eta", ",", "Nmean", ",", "Vnoise", ",", "Nmax"}], 
          "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"1", "/", "n"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"\[Epsilon]A", "-", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"\[Epsilon]A", "/", "5"}], ")"}]}]}], ")"}]}]}], 
       "]"}]}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"for", " ", "a", " ", "simple", " ", "loss", " ", "channel"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lOTgauss", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "\[Beta]_", ",", "n_", ",", "\[Epsilon]A_", ",", 
      "\[Alpha]_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_"}], "]"}], ":=", 
    RowBox[{"lOTgauss", "[", 
     RowBox[{
     "d", ",", "G", ",", "\[Beta]", ",", "n", ",", "\[Epsilon]A", ",", 
      "\[Alpha]", ",", "\[Nu]", ",", "Nmax", ",", "eta", ",", "0", ",", "0"}],
      "]"}]}], "  ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rateOTgauss", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "\[Beta]_", ",", "n_", ",", "\[Epsilon]A_", ",", 
      "\[Alpha]_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_"}], "]"}], ":=", 
    RowBox[{"rateOTgauss", "[", 
     RowBox[{
     "d", ",", "G", ",", "\[Beta]", ",", "n", ",", "\[Epsilon]A", ",", 
      "\[Alpha]", ",", "\[Nu]", ",", "Nmax", ",", "eta", ",", "0", ",", "0"}],
      "]"}]}], "  ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "experiment", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lOTgaussExp", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "n_", ",", "\[Epsilon]A_", ",", "\[Alpha]_", ",", 
      "rEC_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_"}], "]"}], ":=", " ", 
    RowBox[{"lOTgaussExp", "[", 
     RowBox[{
     "d", ",", "G", ",", "n", ",", "\[Epsilon]A", ",", "\[Alpha]", ",", "rEC",
       ",", "\[Nu]", ",", "Nmax", ",", "eta", ",", "0", ",", "0"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rateOTgaussExp", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "n_", ",", "\[Epsilon]A_", ",", "\[Alpha]_", ",", 
      "rEC_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_"}], "]"}], ":=", " ", 
    RowBox[{"rateOTgaussExp", "[", 
     RowBox[{
     "d", ",", "G", ",", "n", ",", "\[Epsilon]A", ",", "\[Alpha]", ",", "rEC",
       ",", "\[Nu]", ",", "Nmax", ",", "eta", ",", "0", ",", "0"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"for", " ", "a", " ", "given", " ", "l_EC"}], " ", "*)"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lOTgaussEC", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "n_", ",", "\[Epsilon]A_", ",", "\[Alpha]_", ",", 
      "lEC_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_", ",", "Nmean_", ",", 
      "Vnoise_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"n", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", "2"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"rG\[Alpha]", "[", 
            RowBox[{
            "d", ",", "n", ",", "\[Epsilon]A", ",", "G", ",", "\[Alpha]"}], 
            "]"}], "-", " ", "lEC"}], "  ", ")"}]}], "-", " ", 
        RowBox[{"\[Nu]", "*", 
         RowBox[{"CapCltherm", "[", 
          RowBox[{"eta", ",", "Nmean", ",", "Vnoise", ",", "Nmax"}], 
          "]"}]}]}], ")"}]}], " ", "-", " ", 
     RowBox[{"Log", "[", 
      RowBox[{"2", ",", 
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"\[Epsilon]A", "-", 
          RowBox[{"4", "*", 
           RowBox[{"(", 
            RowBox[{"\[Epsilon]A", "/", "5"}], ")"}]}]}], ")"}]}]}], 
      "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"lOTgaussEC", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "n_", ",", "\[Epsilon]A_", ",", "\[Alpha]_", ",", 
      "lEC_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_"}], "]"}], ":=", " ", 
    RowBox[{"lOTgaussEC", "[", 
     RowBox[{
     "d", ",", "G", ",", "n", ",", "\[Epsilon]A", ",", "\[Alpha]", ",", "lEC",
       ",", "\[Nu]", ",", "Nmax", ",", "eta", ",", "0", ",", "0"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "rateL", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rateOTgauss", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "\[Beta]_", ",", "n_", ",", "\[Epsilon]A_", ",", 
      "\[Alpha]_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_", ",", "Nmean_", 
      ",", "Vnoise_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"rGaussf", "[", 
         RowBox[{
         "d", ",", "G", ",", "\[Beta]", ",", "n", ",", "\[Epsilon]A", ",", 
          "\[Alpha]"}], "]"}], " ", "-", " ", 
        RowBox[{"\[Nu]", " ", 
         RowBox[{"CapCltherm", "[", 
          RowBox[{"eta", ",", "Nmean", ",", "Vnoise", ",", "Nmax"}], 
          "]"}]}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"1", "/", "n"}], " ", 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"\[Epsilon]A", "-", 
           RowBox[{"4", "*", 
            RowBox[{"(", 
             RowBox[{"\[Epsilon]A", "/", "5"}], ")"}]}]}], ")"}]}]}], 
       "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rateOTgaussEC", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "n_", ",", "\[Epsilon]A_", ",", "\[Alpha]_", ",", 
      "lEC_", ",", "\[Nu]_", ",", "Nmax_", ",", "eta_"}], "]"}], ":=", " ", 
    RowBox[{"rateOTgaussEC", "[", 
     RowBox[{
     "d", ",", "G", ",", "n", ",", "\[Epsilon]A", ",", "\[Alpha]", ",", "lEC",
       ",", "\[Nu]", ",", "Nmax", ",", "eta", ",", "0", ",", "0"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", " ", 
     RowBox[{"BC", " ", "with", " ", "Gaussian", " ", "Bound"}], " ", "*)"}], 
    "Subsection"], 
   StyleBox[" ", "Subsection"], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rGBC1", "[", 
     RowBox[{
     "a_", ",", "d_", ",", "n_", ",", "eps1_", ",", "eps2_", ",", 
      "eps\[Alpha]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "2"}], "*", 
      RowBox[{"\[Lambda]Gauss", "[", 
       RowBox[{"a", ",", "d", ",", "n", ",", "eps1", ",", "eps\[Alpha]"}], 
       "]"}]}], "-", " ", 
     RowBox[{
      RowBox[{"1", "/", "n"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"1", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"eps2", "-", "eps1"}], ")"}], "^", "2"}]}]}], "]"}], "+",
         "1"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rGBC1max", "[", 
     RowBox[{"d_", ",", "n_", ",", "eps2_", ",", "eps\[Alpha]_"}], "]"}], ":=", 
    RowBox[{"Maximize", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rGBC1", "[", 
         RowBox[{
         "aa", ",", "d", ",", "n", ",", "\[Epsilon]", ",", "eps2", ",", 
          "eps\[Alpha]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"eps\[Alpha]", "<", "\[Epsilon]", "<", "eps2"}], " ", "&&", 
         " ", 
         RowBox[{"1", "<", "aa", "<", "2"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"aa", ",", "\[Epsilon]"}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rGBC1", "[", 
     RowBox[{"d_", ",", "n_", ",", "eps2_", ",", "eps\[Alpha]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"rGBC1max", "[", 
      RowBox[{"d", ",", "n", ",", "eps2", ",", "eps\[Alpha]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rGBC2", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "\[Tau]B_", ",", "n_", ",", "m_", ",", 
      "\[Epsilon]C_", ",", "eps2_", ",", "eps\[Alpha]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"rGBC1", "[", 
      RowBox[{"d", ",", "n", ",", "eps2", ",", "eps\[Alpha]"}], "]"}], "-", 
     " ", 
     RowBox[{
      RowBox[{"m", "/", "n"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"rTyp", "[", 
         RowBox[{"d", ",", "G", ",", "\[Tau]B"}], "]"}], "+", "\[Epsilon]C"}],
        ")"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rGBC", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "\[Tau]B_", ",", "n_", ",", "m_", ",", 
      "\[Epsilon]C_", ",", "eps2_", ",", "eps\[Alpha]_", ",", "\[Nu]_", ",", 
      "Nmax_", ",", "eta_", ",", "Nmean_", ",", "Vnoise_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"rGBC2", "[", 
      RowBox[{
      "d", ",", "G", ",", "\[Tau]B", ",", "n", ",", "m", ",", "\[Epsilon]C", 
       ",", "eps2", ",", "eps\[Alpha]"}], "]"}], "-", " ", 
     RowBox[{"\[Nu]", " ", 
      RowBox[{"CapCltherm", "[", 
       RowBox[{"eta", ",", "Nmean", ",", "Vnoise", ",", "Nmax"}], "]"}]}]}]}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rGBC", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "\[Tau]B_", ",", "n_", ",", "m_", ",", 
      "\[Epsilon]C_", ",", "eps2_", ",", "eps\[Alpha]_", ",", "\[Nu]_", ",", 
      "Nmax_", ",", "eta_"}], "]"}], ":=", 
    RowBox[{"rGBC", "[", 
     RowBox[{
     "d", ",", "G", ",", "\[Tau]B", ",", "n", ",", "m", ",", "\[Epsilon]C", 
      ",", "eps2", ",", "eps\[Alpha]", ",", "\[Nu]", ",", "Nmax", ",", "eta", 
      ",", "0", ",", "0"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]binding", "[", 
     RowBox[{
     "d_", ",", "G_", ",", "\[Tau]B_", ",", "n_", ",", "m_", ",", 
      "\[Epsilon]C_", ",", "eps2_", ",", "eps\[Alpha]_", ",", "\[Nu]_", ",", 
      "Nmax_", ",", "eta_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"2", "eps2"}], "+", 
     RowBox[{"2", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "n"}], "*", 
        RowBox[{"rGBC", "[", 
         RowBox[{
         "d", ",", "G", ",", "\[Tau]B", ",", "n", ",", "m", ",", 
          "\[Epsilon]C", ",", "eps2", ",", "eps\[Alpha]", ",", "\[Nu]", ",", 
          "Nmax", ",", "eta"}], "]"}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
        "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", 
       "==="}], "=", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Majorization", " ", "Bound"}], " ", "\[IndentingNewLine]", "===",
        "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", 
       "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
        "\[Equal]"}]}], "\[IndentingNewLine]", "*)"}], "Subsection"], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Lambda]", "[", 
      RowBox[{"\[Gamma]_", ",", "n_"}], "]"}], ":=", 
     FractionBox[
      RowBox[{"2", " ", "\[Gamma]", " ", 
       SuperscriptBox[
        RowBox[{"Re", "[", 
         RowBox[{"SpheroidalS1", "[", 
          RowBox[{"n", ",", "0", ",", "\[Gamma]", ",", "1"}], "]"}], "]"}], 
        "2"]}], "\[Pi]"]}], " ", ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"c1", "[", "\[Delta]_", "]"}], ":=", 
     RowBox[{"N", "[", 
      RowBox[{"\[Lambda]", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Delta]", "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"4", "*", "hbar"}], ")"}]}], ",", "0"}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c0", "[", "\[Delta]_", "]"}], ":=", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Delta]", "^", "2"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "*", "hbar", "*", " ", "\[Pi]"}], ")"}]}], ")"}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"c", "[", "\[Delta]_", "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"\[Delta]", "\[LessEqual]", " ", "1.5"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Delta]", "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{"2", "*", "hbar", "*", " ", "\[Pi]"}], ")"}]}], ")"}], " ", 
      ",", 
      RowBox[{"N", "[", 
       RowBox[{"\[Lambda]", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Delta]", "^", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"4", "*", "hbar"}], ")"}]}], ",", "0"}], "]"}], "]"}]}], 
     "]"}]}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Approximation", " ", "for", " ", "delta"}], " ", "<", " ", 
     "1"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "in", " ", "the", " ", "following", " ", "\[Gamma]", " ", "refers", " ", 
     "to", " ", "the", " ", "highest", " ", "eigenvalue", " ", "of", " ", 
     "the", " ", "operator", " ", "P_\[Delta]Q", "_\[Delta]P", "_\[Delta]", 
     " ", "which", " ", "is", " ", "given", " ", "by", " ", 
     RowBox[{"c1", "[", "\[Delta]", "]"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"r", " ", "denotes", " ", "the", " ", "maximum", " ", "of", " ", 
     RowBox[{"\[Alpha]", "^", "2"}], 
     RowBox[{"\[Beta]", "^", "2"}], " ", "and", " ", "rsq", " ", "as", " ", 
     RowBox[{"Sqrt", "[", "r", "]"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"CMaj", "[", 
      RowBox[{"\[Alpha]_", ",", "\[Delta]_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"r", "=", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"c1", "[", "\[Delta]", "]"}], "]"}]}], ";", 
         RowBox[{
          RowBox[{"1", "/", "2"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"r", "^", "\[Alpha]"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", "r"}], ")"}], "^", "\[Alpha]"}]}], ")"}]}]}], 
        ")"}], "//", 
       RowBox[{"N", "\[IndentingNewLine]", 
        RowBox[{"CMaj0", "[", 
         RowBox[{"\[Alpha]_", ",", "\[Delta]_"}], "]"}]}]}], ":=", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"r", "=", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"c0", "[", "\[Delta]", "]"}], "]"}]}], ";", 
          RowBox[{
           RowBox[{"1", "/", "2"}], "*", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"r", "^", "\[Alpha]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "r"}], ")"}], "^", "\[Alpha]"}]}], ")"}]}]}],
          ")"}], "//", 
        RowBox[{"N", "\[IndentingNewLine]", 
         RowBox[{"BMaj", "[", 
          RowBox[{"\[Alpha]_", ",", "\[Delta]_"}], "]"}]}]}], ":=", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "=", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"c1", "[", "\[Delta]", "]"}], "]"}]}], ";", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}]}], "*", 
            RowBox[{"Log", "[", 
             RowBox[{"2", ",", 
              RowBox[{
               RowBox[{"1", "/", "2"}], "*", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"r", "^", "\[Alpha]"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "r"}], ")"}], "^", "\[Alpha]"}]}], 
                ")"}]}]}], "]"}]}]}], ")"}], "//", 
         RowBox[{"N", "\[IndentingNewLine]", 
          RowBox[{"BMaj0", "[", 
           RowBox[{"\[Alpha]_", ",", "\[Delta]_"}], "]"}]}]}], ":=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "=", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"c0", "[", "\[Delta]", "]"}], "]"}]}], ";", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", "\[Alpha]"}], ")"}]}], "*", 
            RowBox[{"Log", "[", 
             RowBox[{"2", ",", 
              RowBox[{
               RowBox[{"1", "/", "2"}], "*", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"r", "^", "\[Alpha]"}], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "-", "r"}], ")"}], "^", "\[Alpha]"}]}], 
                ")"}]}]}], "]"}]}]}], ")"}], "//", "N"}]}]}]}]}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"coeffOld", "[", 
       RowBox[{"\[Delta]_", ",", "k_"}], "]"}], ":=", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"co", "\[GreaterEqual]", " ", "0.001"}], ",", "co", ",", 
         "0"}], " ", "]"}], "/.", 
       RowBox[{"co", "->", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"c", "[", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"Ceiling", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "+", "1"}], ")"}], "/", "2"}], "]"}], "*", 
              RowBox[{"Floor", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"k", "+", "1"}], ")"}], "/", "2"}], "]"}]}], "]"}], 
            "*", "\[Delta]"}], "]"}], "]"}], "-", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"c", "[", 
           RowBox[{
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"Ceiling", "[", 
               RowBox[{
                RowBox[{"(", "k", ")"}], "/", "2"}], "]"}], "*", 
              RowBox[{"Floor", "[", 
               RowBox[{
                RowBox[{"(", "k", ")"}], "/", "2"}], "]"}]}], "]"}], "*", 
            "\[Delta]"}], "]"}], "]"}]}]}]}]}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"coeff", "[", 
      RowBox[{"\[Delta]_", ",", "k_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{"c", "[", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"k", "+", "1"}], ")"}], "/", "2"}], "]"}], "*", 
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"k", "+", "1"}], ")"}], "/", "2"}], "]"}]}], "]"}], "*",
          "\[Delta]"}], "]"}], "]"}], "-", " ", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"c", "[", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"(", "k", ")"}], "/", "2"}], "]"}], "*", 
           RowBox[{"Floor", "[", 
            RowBox[{
             RowBox[{"(", "k", ")"}], "/", "2"}], "]"}]}], "]"}], "*", 
         "\[Delta]"}], "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"kmax", "[", 
      RowBox[{"cmin_", ",", "d_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"a", "^", "2"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", "a"}], ")"}]}], "/.", 
      RowBox[{"a", "\[Rule]", 
       RowBox[{"cmin", "*", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"8", "Pi"}], "]"}], "/", "d"}]}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wNnorm", "[", 
     RowBox[{"\[Delta]_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"coeff", "[", 
          RowBox[{"\[Delta]", ",", "#"}], "]"}], "&"}], ",", "n"}], "]"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w", "[", 
     RowBox[{"\[Delta]_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "1", "}"}], ",", 
      RowBox[{"Array", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"coeff", "[", 
          RowBox[{"\[Delta]", ",", "#"}], "]"}], "&"}], ",", "n"}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"1", "-", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"c", "[", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"Ceiling", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "]"}], "*", 
             RowBox[{"Floor", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", "+", "1"}], ")"}], "/", "2"}], "]"}]}], "]"}], 
           "*", "\[Delta]"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BMaj", "[", 
     RowBox[{"\[Alpha]_", ",", "\[Delta]_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"1", "-", "\[Alpha]"}], ")"}]}], " ", "*", 
     RowBox[{"Log", "[", 
      RowBox[{"2", ",", 
       RowBox[{
        RowBox[{"1", "/", "2"}], "*", 
        RowBox[{"Tr", "[", 
         RowBox[{
          RowBox[{"w", "[", 
           RowBox[{"\[Delta]", ",", "n"}], "]"}], "^", "\[Alpha]"}], 
         "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BMajtest", "[", 
     RowBox[{"\[Alpha]_", ",", "\[Delta]_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]"}], ")"}]}], " ", "*", 
       RowBox[{"Log", "[", 
        RowBox[{"2", ",", 
         RowBox[{
          RowBox[{"1", "/", "2"}], "*", 
          RowBox[{"Tr", "[", 
           RowBox[{
            RowBox[{"w", "[", 
             RowBox[{"\[Delta]", ",", "n"}], "]"}], "^", "\[Alpha]"}], 
           "]"}]}]}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"w", "[", 
        RowBox[{"\[Delta]", ",", "n"}], "]"}], "[", 
       RowBox[{"[", "n", "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "More", " ", "elaborate", " ", "computation", " ", "that", " ", "stops", 
      " ", "if", " ", "the", " ", "value", " ", "of", " ", "coefficents", " ",
       "is"}], " ", "<", " ", "cmin"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BMa", "[", 
     RowBox[{"a_", ",", "d_", ",", "n_", ",", "Cmin_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sum", "=", "1"}], ",", 
        RowBox[{"co", "=", "1"}], ",", 
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"norm", "=", "0"}]}], "}"}], ";", 
      RowBox[{"Catch", "[", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"co", "=", 
           RowBox[{"coeff", "[", 
            RowBox[{"d", ",", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"sum", "=", 
           RowBox[{"sum", "+", 
            RowBox[{"co", "^", "a"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"norm", "=", 
           RowBox[{"norm", "+", "co"}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"co", "\[LessEqual]", "  ", "Cmin"}], ",", 
            RowBox[{"Throw", "[", 
             RowBox[{
              RowBox[{"1", "/", 
               RowBox[{"(", 
                RowBox[{"1", "-", "a"}], ")"}]}], " ", "*", 
              RowBox[{"Log", "[", 
               RowBox[{"2", ",", 
                RowBox[{
                 RowBox[{"1", "/", "2"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"sum", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "norm"}], ")"}], "^", "a"}]}], 
                  ")"}]}]}], "]"}]}], "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "n"}], "}"}]}], "]"}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BMa", "[", 
     RowBox[{"a_", ",", "d_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"BMa", "[", 
     RowBox[{"a", ",", "d", ",", "n", ",", "0.0005"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BMa", "[", 
     RowBox[{"a_", ",", "d_"}], "]"}], ":=", 
    RowBox[{"BMa", "[", 
     RowBox[{"a", ",", "d", ",", "10000", ",", "0.0005"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "the", " ", "second", " ", "ouput", " ", "is", " ", "the", " ", "number", 
     " ", "of", " ", "iterations"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BMaIt", "[", 
     RowBox[{"a_", ",", "d_", ",", "n_", ",", "Cmin_"}], "]"}], ":=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sum", "=", "1"}], ",", 
        RowBox[{"co", "=", "1"}], ",", 
        RowBox[{"k", "=", "1"}], ",", 
        RowBox[{"norm", "=", "0"}]}], "}"}], ";", 
      RowBox[{"Catch", "[", 
       RowBox[{"Do", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"co", "=", 
           RowBox[{"coeff", "[", 
            RowBox[{"d0", ",", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"sum", "=", 
           RowBox[{"sum", "+", 
            RowBox[{"co", "^", "a"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"norm", "=", 
           RowBox[{"norm", "+", "co"}]}], ";", " ", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"co", "\[LessEqual]", " ", "cmin"}], ",", 
            RowBox[{"Throw", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"1", "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", "a"}], ")"}]}], " ", "*", 
                RowBox[{"Log", "[", 
                 RowBox[{"2", ",", 
                  RowBox[{
                   RowBox[{"1", "/", "2"}], "*", 
                   RowBox[{"(", 
                    RowBox[{"sum", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "-", "norm"}], ")"}], "^", "a"}]}], 
                    ")"}]}]}], "]"}]}], ",", "k"}], "}"}], "]"}]}], "]"}]}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "n"}], "}"}]}], "]"}], "]"}]}], ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "===", "===", "===", "===", "===", "===", "===", "===", "===", "===", "===",
       "===", "===", "===", 
      RowBox[{"\[Equal]", "\[IndentingNewLine]", "r"}]}], "=", " ", 
     RowBox[{
      RowBox[{"1", "/", "2"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"uncertanty", " ", "rate"}], " ", "-", " ", 
        RowBox[{"error", " ", "correction", " ", "rate"}], "  ", "-", " ", 
        RowBox[{"xi", "[", 
         RowBox[{"alpha", ",", "n", ",", "eps"}], "]"}]}], ")"}]}]}], 
    "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"asymptotic", " ", "case", " ", "for", " ", "n"}], " ", 
     "\[Rule]", " ", 
     RowBox[{"\\", "infty"}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rMaj", "[", 
     RowBox[{"a_", ",", "d_", ",", "G_", ",", "\[Beta]_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"BMa", "[", 
        RowBox[{"a", ",", "d"}], "]"}], " ", "-", " ", 
       RowBox[{"EC", "[", 
        RowBox[{"d", ",", "G", ",", "\[Beta]"}], "]"}]}], ")"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"finite", " ", "n", " ", "case"}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xiOT", "[", 
     RowBox[{
     "a_", ",", "n_", ",", "epsA_", ",", "eps1_", ",", "eps2_", ",", 
      "eps\[Alpha]_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"n", 
         RowBox[{"(", 
          RowBox[{"a", "-", "1"}], ")"}]}], ")"}]}], 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"2", "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"eps2", "-", "eps\[Alpha]"}], ")"}], "^", "2"}]}]}], 
       "]"}]}], "+", " ", 
     RowBox[{
      RowBox[{"2", "/", "n"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"1", "/", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"eps1", "-", "eps2"}], ")"}], "^", "2"}]}]}], "]"}], "+",
         "1"}], ")"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"choose", " ", "eps1"}], " ", "=", " ", 
     RowBox[{"epsA", "/", "5"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xiOT", "[", 
     RowBox[{
     "a_", ",", "n_", ",", "epsA_", ",", "eps2_", ",", "eps\[Alpha]_"}], 
     "]"}], ":=", 
    RowBox[{"xiOT", "[", 
     RowBox[{"a", ",", "n", ",", "epsA", ",", 
      RowBox[{"epsA", "/", "5"}], ",", "eps2", ",", "eps\[Alpha]"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xi", "[", 
     RowBox[{"a_", ",", "n_", ",", "\[Epsilon]A_", ",", "\[Epsilon]_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"n", 
         RowBox[{"(", 
          RowBox[{"a", "-", "1"}], ")"}]}], ")"}]}], 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", 
        RowBox[{"2", "/", 
         RowBox[{"\[Epsilon]", "^", "2"}]}]}], "]"}]}], " ", "+", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "n"}], ")"}], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Epsilon]A", "/", "5"}], "-", "\[Epsilon]"}], ")"}], "^",
          "2"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xi", "[", 
     RowBox[{"a_", ",", "n_", ",", "\[Epsilon]A_"}], "]"}], ":=", " ", 
    RowBox[{"-", 
     RowBox[{
      RowBox[{"Maximize", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"xi", "[", 
            RowBox[{"a", ",", "n", ",", "\[Epsilon]A", ",", "\[Epsilon]"}], 
            "]"}]}], ",", 
          RowBox[{"0", "<", "\[Epsilon]", "<", 
           RowBox[{"\[Epsilon]A", "/", "5"}]}]}], "}"}], ",", "\[Epsilon]"}], 
       "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rMajf", "[", 
     RowBox[{
     "a_", ",", "d_", ",", "G_", ",", "\[Beta]_", ",", "n_", ",", 
      "\[Epsilon]A_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"BMa", "[", 
        RowBox[{"a", ",", "d"}], "]"}], " ", "-", " ", 
       RowBox[{"EC", "[", 
        RowBox[{"d", ",", "G", ",", "\[Beta]"}], "]"}], " ", "-", " ", 
       RowBox[{"xi", "[", 
        RowBox[{"a", ",", "n", ",", "\[Epsilon]A"}], "]"}]}], ")"}]}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rMajf", "[", 
     RowBox[{"a_", ",", "d_", ",", "G_", ",", "\[Beta]_", ",", "n_"}], "]"}], 
    ":=", 
    RowBox[{"rMajf", "[", 
     RowBox[{
     "a", ",", "d", ",", "G", ",", "\[Beta]", ",", "n", ",", "\[Epsilon]A0"}],
      "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.6379685543739147`*^9, 3.637968590296969*^9}, {
   3.637968665476269*^9, 3.6379686993352056`*^9}, {3.6379687521992292`*^9, 
   3.6379687547163734`*^9}, {3.637968837436105*^9, 3.637968837621115*^9}, {
   3.638130999058793*^9, 3.638131003892069*^9}, {3.638158588762619*^9, 
   3.638158938577627*^9}, {3.638158982637147*^9, 3.6381590111977806`*^9}, {
   3.638159049397966*^9, 3.638159049607978*^9}, {3.6381591025750074`*^9, 
   3.638159120922057*^9}, {3.638159153278908*^9, 3.638159331516102*^9}, {
   3.638159737501323*^9, 3.638159744745737*^9}, {3.638225894551173*^9, 
   3.638225896340276*^9}, {3.6382259688714237`*^9, 3.638225999881198*^9}, {
   3.638237576199566*^9, 3.6382376073293457`*^9}, {3.638567602825876*^9, 
   3.6385677329133167`*^9}, {3.63856776637123*^9, 3.6385678122338533`*^9}, {
   3.6385678422825723`*^9, 3.6385681288929653`*^9}, 3.638580694424452*^9, {
   3.638581278614866*^9, 3.638581347337796*^9}, {3.638581380548696*^9, 
   3.6385814373949475`*^9}, {3.638581559597937*^9, 3.6385815789570446`*^9}, {
   3.638581665147974*^9, 3.638581727102518*^9}, 3.6385830531403627`*^9, {
   3.6385832877117796`*^9, 3.638583292842073*^9}, 3.638583335985541*^9, {
   3.638670217251814*^9, 3.6386702327156987`*^9}, {3.6386702760281763`*^9, 
   3.638670291258047*^9}, {3.6386725590887594`*^9, 3.6386725608388596`*^9}, {
   3.6387677138401446`*^9, 3.6387677600617886`*^9}, {3.63876780712648*^9, 
   3.6387678142068853`*^9}, {3.638922954006503*^9, 3.6389229543925247`*^9}, {
   3.638941662819586*^9, 3.63894170309789*^9}, {3.638942407639187*^9, 
   3.6389424161806755`*^9}, {3.638942599231146*^9, 3.6389426156140823`*^9}, {
   3.63894266872112*^9, 3.638942668842127*^9}, {3.6389445962253675`*^9, 
   3.6389446259100647`*^9}, {3.6389448434675083`*^9, 
   3.6389448656707783`*^9}, {3.6390091615637555`*^9, 
   3.6390092036511626`*^9}, {3.6390092388661766`*^9, 3.639009306690056*^9}, {
   3.639009398946333*^9, 3.639009434754381*^9}, {3.639009473942622*^9, 
   3.6390094916686363`*^9}, {3.641257665210142*^9, 3.6412576653031473`*^9}, {
   3.6434336610316877`*^9, 3.6434337102555037`*^9}, {3.6440153916737075`*^9, 
   3.6440154203023453`*^9}, {3.644015496565707*^9, 3.6440156732728143`*^9}, {
   3.644015721644581*^9, 3.6440157858232517`*^9}, {3.644098331637271*^9, 
   3.644098407422606*^9}, {3.644098713871134*^9, 3.6440988025442057`*^9}, {
   3.644621287622306*^9, 3.644621396080509*^9}, {3.644621438966962*^9, 
   3.6446215254669094`*^9}, {3.6446215651541796`*^9, 3.644621584137265*^9}, {
   3.644621629936885*^9, 3.644621637452315*^9}, {3.644621667637041*^9, 
   3.644621705836226*^9}, {3.6446273456342974`*^9, 3.6446273525216913`*^9}, {
   3.64462740128448*^9, 3.6446274013784857`*^9}, {3.644627456827657*^9, 
   3.6446274592507963`*^9}, 3.6446275491299367`*^9, {3.644627590889325*^9, 
   3.644627701884674*^9}, {3.6446278810029187`*^9, 3.644627899114955*^9}, {
   3.64462805813305*^9, 3.644628063073333*^9}, {3.6446280980843353`*^9, 
   3.64462813856065*^9}, {3.6446281722355766`*^9, 3.6446281973260117`*^9}, {
   3.6446282588975334`*^9, 3.64462828909626*^9}, {3.64462837091294*^9, 
   3.6446283849757442`*^9}, {3.6446285519152927`*^9, 
   3.6446285997330275`*^9}, {3.6446286398523226`*^9, 3.644628640041333*^9}, {
   3.6446286856519423`*^9, 3.6446287135995407`*^9}, {3.644628748221521*^9, 
   3.6446288734096813`*^9}, {3.6446290773313446`*^9, 3.64462913685975*^9}, {
   3.644629284681205*^9, 3.6446293160269976`*^9}, {3.644629401823905*^9, 
   3.644629402535946*^9}, {3.644629662399809*^9, 3.6446296630038433`*^9}, {
   3.6446297374331007`*^9, 3.6446297397242317`*^9}, {3.644629771256035*^9, 
   3.644629787659973*^9}, {3.644632984704834*^9, 3.6446329897651234`*^9}, {
   3.6471508382349977`*^9, 3.6471509136583114`*^9}, {3.6471509492033443`*^9, 
   3.647150951771491*^9}, {3.6471509823572407`*^9, 3.647150982467247*^9}, {
   3.666328048768552*^9, 3.666328048942561*^9}, {3.666649231750967*^9, 
   3.666649236454236*^9}, {3.666661694666334*^9, 3.6666619302858114`*^9}, {
   3.6666619782875566`*^9, 3.6666619874820824`*^9}, {3.6666621398657985`*^9, 
   3.666662228903891*^9}, {3.6666627017369356`*^9, 3.6666627499946957`*^9}, {
   3.6666628004605823`*^9, 3.6666628678344355`*^9}, {3.6666631540378056`*^9, 
   3.6666631632803345`*^9}, {3.6666632118091097`*^9, 
   3.6666632118831143`*^9}, {3.666663316146078*^9, 3.666663470645915*^9}, {
   3.6666638333386593`*^9, 3.6666638344917254`*^9}, 3.66811519373888*^9, {
   3.668116763166646*^9, 3.66811677093209*^9}, {3.668887173845478*^9, 
   3.668887173985486*^9}, {3.668896398201233*^9, 3.6688965274836273`*^9}, {
   3.668896613618554*^9, 3.6688966138425674`*^9}, {3.668896706237852*^9, 
   3.6688967644511814`*^9}, {3.6688968485039887`*^9, 3.66889684887601*^9}, 
   3.6688969634845657`*^9, {3.66889702581013*^9, 3.668897053882736*^9}, {
   3.668897083903453*^9, 3.6688971021074944`*^9}, {3.6688971399956613`*^9, 
   3.668897435707575*^9}, {3.6688980699968543`*^9, 3.668898103282758*^9}, {
   3.6688983177640257`*^9, 3.668898374275258*^9}, {3.668898416243658*^9, 
   3.668898444506275*^9}, {3.6688984930800533`*^9, 3.668898552922476*^9}, {
   3.6688992796690435`*^9, 3.6688992865874395`*^9}, 3.6689060166123667`*^9, {
   3.668906130300869*^9, 3.6689061516180887`*^9}, {3.6689063133963413`*^9, 
   3.6689063491833887`*^9}, {3.6689063961070724`*^9, 
   3.6689064736775093`*^9}, {3.6689065058163476`*^9, 
   3.6689065516579695`*^9}, {3.6690616276690207`*^9, 3.669061691794688*^9}, {
   3.6690617225404468`*^9, 3.669061767785034*^9}, {3.6690619205117702`*^9, 
   3.669061989943741*^9}, {3.6690621638326874`*^9, 3.669062171871147*^9}, {
   3.66906221108539*^9, 3.669062227194311*^9}, {3.669062403987423*^9, 
   3.6690625024200535`*^9}, {3.66906360697523*^9, 3.6690636120045176`*^9}, {
   3.669068832369426*^9, 3.669068986350233*^9}, {3.669069056597251*^9, 
   3.6690690786805134`*^9}, {3.669497643946406*^9, 3.6694977167245684`*^9}, {
   3.669498002013886*^9, 3.669498018724842*^9}, {3.6694981130422363`*^9, 
   3.66949818111013*^9}, {3.669498301149996*^9, 3.669498308804434*^9}, 
   3.669502418873516*^9, {3.669503639341323*^9, 3.6695037136135707`*^9}, {
   3.6695038865504627`*^9, 3.669503902728388*^9}, {3.6695039939596057`*^9, 
   3.6695041580069885`*^9}, {3.6695041998993845`*^9, 3.669504322790414*^9}, 
   3.6695128537143197`*^9, {3.669617678659218*^9, 3.669617678756223*^9}, {
   3.6696177464050927`*^9, 3.669617746744112*^9}, {3.6696740030790167`*^9, 
   3.6696740092533703`*^9}, {3.6696741845873985`*^9, 
   3.6696742831330347`*^9}, {3.669674857681897*^9, 3.669674860390052*^9}, 
   3.6696756816350245`*^9, {3.6696757977196646`*^9, 3.6696758170967727`*^9}, {
   3.669675891113006*^9, 3.669675891448025*^9}, {3.6696856366043625`*^9, 
   3.669685636873378*^9}, {3.669685670674311*^9, 3.669685671072334*^9}, {
   3.669686767000017*^9, 3.6696867818898687`*^9}, {3.669687010259931*^9, 
   3.6696870532083874`*^9}, {3.6696882574062634`*^9, 
   3.6696883014787846`*^9}, {3.669688342408126*^9, 3.6696887252650237`*^9}, {
   3.669688788794657*^9, 3.6696889657797804`*^9}, {3.669689053583802*^9, 
   3.6696890587961006`*^9}, {3.669689106710841*^9, 3.6696891216956983`*^9}, {
   3.6696891840342636`*^9, 3.6696892230394945`*^9}, {3.669689266580985*^9, 
   3.6696893680307875`*^9}, {3.673749904391965*^9, 3.6737499058115673`*^9}, {
   3.6737500081487474`*^9, 3.6737500390212016`*^9}, {3.6737500722336597`*^9, 
   3.6737500759308662`*^9}, {3.673750445393316*^9, 3.6737506152826147`*^9}, {
   3.6737507399298334`*^9, 3.67375076613888*^9}, {3.6737509827336607`*^9, 
   3.673750983794462*^9}, {3.6737511479741507`*^9, 3.6737512318136983`*^9}, {
   3.6737517486944065`*^9, 3.6737517560108194`*^9}, {3.703562798149995*^9, 
   3.7035627982005167`*^9}, {3.708684456562538*^9, 3.708684466410822*^9}, {
   3.708684529507522*^9, 3.708684651108623*^9}, {3.708685106271756*^9, 
   3.7086851064969463`*^9}, {3.7086852067384167`*^9, 
   3.7086852485900097`*^9}, {3.708685753434053*^9, 3.708685757978395*^9}, {
   3.7238770470320673`*^9, 3.723877057715192*^9}, {3.7238770931130257`*^9, 
   3.723877127295924*^9}, 3.723877171859812*^9}],

Cell[BoxData["N"], "Output",
 CellChangeTimes->{3.7238776980917597`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["2"], "Input",
 NumberMarks->False],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.6446275323089743`*^9, 3.7035626771171494`*^9, 
  3.708654101964444*^9, 3.7086846434056253`*^9, 3.708685111019403*^9, 
  3.708685253167912*^9, 3.723877698210322*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"rGauss", "[", 
    RowBox[{
     RowBox[{"1", "+", 
      RowBox[{"10", "^", 
       RowBox[{"-", "4"}]}]}], ",", "d", ",", 
     RowBox[{"EPRlossA", "[", 
      RowBox[{"7", ",", "0.95", ",", "0.001"}], "]"}], ",", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "0", ",", "0.2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6381593615418196`*^9, 3.638159370237317*^9}, {
   3.6381598069332943`*^9, 3.638159815697796*^9}, {3.6381601820137477`*^9, 
   3.6381603065108685`*^9}, {3.638160422335493*^9, 3.638160422655512*^9}, 
   3.6381638896998153`*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 0.2}, {0., 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.638160302917663*^9, 3.6381603069338927`*^9}, 
   3.6381604233345504`*^9, 3.6381638916459265`*^9, 3.70356267715373*^9, 
   3.7086541021101933`*^9, 3.7086846434460983`*^9, 3.7086851110569344`*^9, 
   3.708685253208517*^9, 3.723877698337627*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"CapCltherm", "[", 
      RowBox[{"eta", ",", "0.1", ",", "Vn", ",", "15"}], "]"}], ",", 
     RowBox[{"rGauss", "[", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"10", "^", 
         RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
       RowBox[{"EPRlossA", "[", 
        RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"eta", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Vn", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.638160402214342*^9, 3.6381604042384586`*^9}, {
  3.638160599197609*^9, 3.6381607811450157`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
NtC+VgCpf1S6ld5ax070vJLUL7G4v4zPBDE+z48g9Yc/Fsxt8KZ9rU5Sv3bI
w12Ki2n/MIPUv/hN2WGVQbR/GEnqv54+Vq+4hPa1THNlV4jG67Ev9gxb8O++
lkSQbDRf1I8NLdw1stdC2tfKZmSrxPv6sQkqxu0zHEvR8+W/77/92E1Tn3Us
uFZF+7TXZPy46X1Zj4LJG82H0f7hzJUy74T8vqzw8A32/KsG9NxLTaYXT7Mv
W+qnalXCpf1De9IvMuzR1zIh9Vf5teWYNtK+ljjwn/pn/F5UdzGH9rUySf2j
pI76F4TTvlYUqV8658CtwPlifG/yIvWrWpz/UbON9g+nk/qXy7VXr59M+4fa
pP7Cpa3+yu20rxU9UUGRp2nAfr/2Zee/+1rbK+UXi4T67MEat+263AL0PDtK
/gJ/pT4rp+jAUXpL+1q9/9bVn325PzUp7FUF7dP+3W/Tn10vsUnUX4f2D5/+
3Q/Wny2bLFPjcIL2DwM95VKFlXrsIeX9K5fkNaLnrP/oa10m9R8NmPPE9Drt
a20l9d/iqOes3U77WjNJ/ctkv7lfG9mBnnuR+ne6jby6OJP2tUpI/TN4du5H
nGj/MI7U75klYaToSfuHAaT+V0+GZc0ypp6PvZdxEDUNYCMK15f/u6+17e/3
OID13V1a2miRT/u0+2Wu8cMHsBPHli7nrC9Gz7P+fr8D2B8LvS7u6UX7h6PG
ydSKmQFs8laBTcQA2j/s/fd7H8Ae8Xaey/el/UNOtsJ2broBO/J2psOqB7R/
ePk/+lpBpP5R5fuepuylfa2tpP5wla2pSya3omcHUv/hyxtfqRTTvhbUv6xJ
dNtodwd6NiH1n73UNzSkk/a1dEn9zQNrQxQ30/5hV9Y/9dseGzxPcgPtH87p
kh0nWD2IvdGZGvXvvtY/88kgdu3EhxFDNtG+Vp/7svu4CoPYwg+mFoZjaP/w
n3lmIHu38MLBmPA/6LnMTTZdGDOQ/WN2/sjg41Xo+Z/5ZyCrdX8J+/I47R8+
6yOrxbMdyG5TG2xy4TbtHzr+R19rNqn/avzIK9s9aV9rFKnf70mTxp0BtH/Y
m9TvfaVLQvc57WtxSP0dLXkbU2bQ/uEfUr/6BZPigOe0r5VF6lc/m32ui0v7
h09J/QrTYsce2kf7h5Kj5FV42YYsq/rhrTCW9rVgf13LKmPx68+0r5VTJLdU
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
XHc+ara26I8iXh94yjLzgb7XlNj/AYsVp9I=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Sef+KZnM5Vn6/ylzLHA8qv6IZFg6/2Xqnonq58vkt6PrIaqjXgXPTdz/yqJr
Aqq1rkkdc2yQjkfXf1RrVb1jX34v1W4Ua65LLVtbc7n9OLX8677SU8WiKxWH
RtdnVNc9Gm6QuN5bLTo+VC39f/YA7iO5yWNUxe3LM8epshXVo2NO1cxPYvRN
XEuXfuuaHSX70XUh1ZnVT5gJ38361Oj6sHp21XL7qXc4MTrHV+/vUviGxL2n
86NzGdVjp0fn+KohTYvO8dUH/Dtz30g9oKq5rzw1szxIN6Xrs6LrS+o/Fipw
fqJYKCtwTqWYR7UV+aZNHBcUOM9RbDM6OodSLhUK3JeSf08L3IuSjz6cuQdW
nPlg5l7Xkcyjon+7emd/Ze6HHSG7mLkHVoR5X+ZeVCH5kcx9pqLMhzL3xo5i
3pM535Nf3p+5X1WY+Z/MvagSzP9m7l0dnSX/C+DVuyoJD+UZpibuMb2ZOc6W
Hf45c99FvZ7Xousz6mNOiK6xqA94dXT9RD3cqO+duF/QL7qnphqMbIt6YJLD
C6Prb+ptqT4lW6H6XTHWayfuEZwXnUv+kdt8xdWKk6Sz0tPvFUPzv06J+yOy
seqrbcjjMX2f6epdRNcq1U9RD1A1/xfZtzt1rVJ9gXOic1jVYEtH10LVT7mE
cU9in94qOv9V76ZLdP6rWnGH6H6i6skVsv/3252ie4uqLc9kPJr4PbeN7mGp
Jtwmuq6rvs/Z0T1H1cD3pc59lJ9eHN1b1Lfemzo/Uq7aIroOrB7W+OhepORk
cnTfU3I1Kbo3KlmaEp3/Sk7qR9ci1MNqwBiZuP81Nro/KxlrFF2LUC9sV+r8
VHlqmej6sHpM8pP61i14ny9mzoHlN/9I7YvVi/k7dc1TPZ1m0XUe9eaujM79
JYf7U+d3qmPsSZ0P6l5jcl2WTo2L7qVKnq+Iri1Ing+kzgdVGzkMV0zc9+mf
66Nkr3x0zVa9swrRtVz17C6I7u2qdzAgurerfsFfqfNW1V5qRddm1ddTzVw2
cjHzmblsq09xeXS9RXrdN7rGop7RjOg6hmyRavWKFRTr/R/zxQ5d
          "]], Polygon3DBox[CompressedData["
1:eJwtmmXAHdUVRWfunQ9oKVqguHtwC06CO0VKcII7wV1KcXfX4O5e3DVY0SIF
gpeWQouVQtfKnh+TmfXuvPle3rv3nL33zAxbjlhn19I0zSn807Gfg3++Z/8x
28wcb8j2B453aptmnoGmaeGj4Qvgf3C8Hdu28EHwkoxvA28NHwAvDv/AdaeA
f8P+Dq/NfnJ4XPa3ey7bVvD+nL8Y528Erw/vDM8Lj1X5TPAUnP8AYxuwrQfv
yPjcjE8EXwHfCzfw2Jw/J4dTcv6DjP3Ifkp4PPZ3whOyXQ7fw/m/cPwFr48D
/wxfC/8d/hX8C3wdPCnXWxyendef8AtiO4rd+Yx/yfEmbBvDu8Hz8/d/5rwZ
4AnZ383YL7z/SPg8xv/ud8W2DXwgvATnbwZvCu8BL+j3xfkHw6fCHznm34B3
hxdg/EWu+wP8KdszflbGz+T4Wsa/43gY27rwDvBcnL8VvCW8H7wovB/XP8m/
z3t/YmwAnh2eHL4fHh9eEJ4efgRei21FeBPePzPvXxteHd4CnhVeB14D3hKe
DV4TXgHeGJ4JXo/r7QRvwPU+ZOx++LfwdIxf4VyCL4SPY7xy/jTwsvC88NOM
r8Y2BP4D50/P+H2MTwxPA1/O2Epsg+E14KkZX5/xneENef9oxn4Pbw+vD78P
/4f9pPDY7G+Fvy65Xsf+JvhL9r+GG/bXw/9mPwk4FvtbvJ5/E96UvzcLf++b
kv/PAPubGZuMv7eE6wh+Ev4H+3Hhlv0Nzh/GZ2I3MXyv3x3b8vBGXG9GrvcL
r88IT8T+Hsam5vyh8DzwU/B48AJ+f/DD8MpsS8Hr8P5peP8W8HB4b3gReBbO
XxVelPOfZ2xBeAN4RfhFz2XbHN6L8xfm/PHhS+G74P85xrYZvCe8EOPjdfm9
boH/y/EEbJfBd8M/c/wbtgvgm+EfOR6X7Xz4JvgHjn/Ldj38EFy43m/4PPPD
0/J5HnIcXhSeFX4MngteG14aHgVPzHYd/CDvb3n/zIyvAg9m/DnGZoJXhheB
n/X7h3eHj+L8t+BJ4MXg2Rh/HF6VbRl4Pcan43qrwEvD68LTwgtx/obwSpz/
EmO/ZjsLvo7x762Nzgl4G3hOzl8XXhPeCp7d+e8agreG54C369f3jlzvX4yd
w/YM/B7juzL+OONTwwvCNzL2HefNCv+K/QQDqZ+zwb9mPyH8Ffvpna7sx4cX
4H3jwf9le4nXTqj5PcfUd8YnrlnPM8NTDeT7dj7PUrJ+nB/bwSvA83m9mvq+
fEk99vdwfi1V8v/9p32A7S7rHduJNfPhVI4HGJ+npv4MgQfB89bU+6El9Wn+
mnq4XEl/ma+mfyxbUt+nqvn+5ir5fU6qqd+nwWMNpH7/Dv6f/2/7QU39mcm6
D4/gOzwGvpDx5eHd4GPhi+AV4L3gU+Ar4VXgfeFz4Rvh1eHd4ePgi+EV4Qlr
1uuM9jV4T8ZPhq9gfGX4VzXzZyrGJ4MvgG+FL7FWwxfCt8EjrTPwmTXz+Rx4
bPhB9h/A/2B7omR9WP+msW8yPm7NfJ3a/zf8k78LPD77iQZSL5yPc5fUyylr
5uOgkvk8eU29nrP09QLe1/lb0s+Hw/s4X0v624i+f+1Z0l92q+l/e5XM/+vh
R1zvflautzm8t/O/pN9tBu9lf4C/sJ/Be9o/4M/tbfAe8HD4M3h7+BB4J/hr
eGf4T/ZX+N/woTX97nBFC39vV/gI+yf8rf0VPsj+B39lr4UPhLeH/wnvAh9u
P4X/A//cv//cNp/vqJr6dWxJfTqypn4dU1JvZqvpx4uV9L85a+rjEiXrfYYa
vbRgSf+bo6a/L17SH6ev0S8LlNT76Wr69fzqBnhQTT1esqRe7MdnOq+vn2vA
M9boo4VK+vFjfs/wl2yPc3wI42dw/KcSfXMwfDp8WEl9tj4Ogxcu6V8HwafB
fyyp93vDx8P7ldTrfeET4QNK6v0+8Anw/iX1fR9rGHwDn281rrc3fDZ8Pbwq
fAB8EXw7vBb8cRnTApvv+/7/mevYegVfDX9axvyszY/wVfAObDvCh8JLM/Ch
815tw2t/4/iTEt36A69dycHoMqZ1N9/1+uAotptdS/DG/p7wTX5X8Ebw4fAN
8KPwBvAx8J3ws/Cm8FJd6utgeGL4WPgu+Dl4M/ho+A74GXgT+Aj4RvgxeEPr
JTwWx6OtSRwvyTad/anNel2mS31fGp4EHtKlvi8DTwovBk9oPWlT31/gyxtk
fbTmMvaGOq5JzX+d4xV4bWGOV2tT/952HjTpKX/leOMuv/8uber7ivAi8Opt
+sHB8JXwn+F14CW61NdBbfrNc65D643fEcfLdqk/y7epR8vB89k/2tQr9ep/
rF9sL3A8lPF5rPdt6uP2XfrNwfBSrg/4MfhNeHv4Evgl+BN4n/7vf9fEnzzt
fGf8Ko7vY3xdxv8IXwM/AP8B3hk+AD4ZHgofCF8M3wH/Hj4BvtfPBm8Bnw4/
Dr8F7wCfBj8EvwZvB+8E7w+fBA+x/sB/hM+Cl4OH8fvsAm9Uot83gHeFN4Y/
7uIP/H4mKJlPteb3mlQdCZ/KOQ/Cr3K9bQeiz9W3vyuZD+oCf8uf2f7Caxsy
PoLjTVwLvLer+T0nK5lPJ/HaffDLvG8r+GT4fvgVeGv4FPgBrwVvA58HPwd/
AO8+kPnV9fP3FY7PZfxZjt/ntd0YPx6+Bx4FD4ePg++Gn4c3hw+Fr4bvh9ez
3sCXwHfCa8OHwdc20XPrw2fDT8Pvwrv083dsvZC/AcdnMP6Ec5nXdrR/wk/C
b8M7wefDz8MfwnvAZ8FPwe/AO9uP4VHwaHhP+zH8AvwRvBd8Efyi8wveG/5f
3y/OadOv9DPOp2El9ei/8KHw6W2+fzXlZm00qFpTDatXUGOptdS4epkhTXq7
HmfbNhpX76OmX7+N5lfrq/nVlvZ0e7ueYngbTa/X0ENbK6wZakM9nF7IOePc
0QOv1Ubz6o31sJu30cx6Wz35kDYeUK+u5xvWxoPpBe1RehM1lb3rSftok9/E
enIvr/3N9Vbyfd0Dv+fvXfJ9/tT377Pb9Hc9/JptNL7eftYu9UEvux/nP6Uu
buJxrRdqYOf8VPBIjmfpUn9GMbYv53/K2Nfw52y38NrC8FdNaoT1SY+3BK/N
3MT76eEWb+PB9Ha1pLZb49XSR9TUj6NK9N/hNfP3yJL+dkBN/Ti4RO8dVlN/
jijpd/vX9LuD4JWsNzXz/ZASfblTjd40dLFebFWjR7ctqSc71ujJXayt8MY1
9WUzeJmBeAS9wt/YRnC8R03/3btE3+5Vo1/3KdG39nP1w74l+tUMZGibTMVs
RM+6WBvPqZfVAy/aJsPQG9tj7DVmKpd28awrtfGgNvI/wyu3yQzaGs+6YhtP
p5e9g9f+yvE9JfXibvhd63XJ+rsTfhu+t6TemJnYO6yR1sq7GH/HflSyntVz
6vHtSur5jF30z6Ml/UENMUsbj6+2GMZrj7Tp8WfX9JRHSuaLvcY55Fwy85od
3hJ+qU3NvJLzv22jydUUo3uNtmEbD6B2W45tWbY3eO+b/XaktbHJ2KfwGW1q
xEbwB12fQ3jtftuPsRPbjD1qz7CX2CNq1oRrw7xnWnvPQOqg9XDqLnPI3nNY
k7k1omStuebUzs4pe5U1y7nmnDqzzZxyrh0wkDVtT7msyxzTK+uZnXvO4cvb
zEnntnPOuWcPuL3G023fRsPq9QbD+7bxfMvrPeDb2qyJY+Bn7PdqC/8/8Atq
SHsvPHeNx52jjebQ+6rhzHom6r9/fw+10BhNpHbpogfVhQcNJLOZt03maJZj
z7J3qcHeKslg5m+TCZrNmPHN3SaTNPtTc87UJvNRi6opZ2iT8ag11axmV2ZG
alkzw0H959WLLsRxbdMz1WPqP+ul37Hf9Qf2Za/XRr/a85dqowHVAuP269tM
4IoaTztbm4zS6+s5V22jGfSi46ix4D/DZ8Hf8Pcua5Px7VCT8d3aJrMx+3uP
a0zk98f2DseDuuhD55RzS89idmdGoJcxk3u4TWZjVqdn2LTvb3qJzXnf0W08
nF5Ov2Q/P7rEr1xVoyeuLdEfZlAj2mQqZlNmNru2yaTMcsxs1KbD+uu/or5q
kyEOrsmAzLaGN8kiXu7iDfQIi9VkWmpJNaVZhhrMLFVPqDYzEzyljSc0KzST
PLlfH/Z2M55D2mSGZj9qttPaZDZqub/Ah7XJGJewlsHHtfG4q1nL4GP672Ml
a1+X78f1tAL8KvynNhpxqZpMyvVmzbB2vMd2fBsPvQbjr8GHt9GQy1gL4WPb
eOhV7L3wCW08+1p9fbGW6OnXrtnMQK05jr3OdkQbzThU7VKixexR9io9ntme
Hljvp8czy9MD6/302Ne08ZR6bzMD7wWYCWzRz4ez+vpi/dCzXwWf2tcjNZJa
SY+vdtWDX93Gg+rN9ehmLdZ4a70ZwKVtPKjZgJnZyDYe1CxNj39JG8+6bV//
zHJO6euhmuPsvj46P/X4en01ndmEmu6cvl6aTeiRzTIvbeKd9cRmoSObeGU9
sV7cnmpv1WN7L+GyJt7bjEAt6xpwLZghmHWa8ZgtaG69V3F5kyzDjMV7CUc2
yV7M6J6Eb2mS3ZmheO/giCbZipmL2aMZiFmMmYzZv57frMYaa687vqT26jEG
9/38594T6DXVi3qFi2v8zqUl/vUm5yh8a4n/udk5CN9WorePr/HTJ5Xo91vt
ffAdJfr6tBp/fEaJHzuuxm+fWOK3zqvxNxeW+O/Ta/zCmSX+4JQa/316if88
tsZPn1CSH5xf48cuKvHzt8Cv24tK9P9t8JvwnSX+wRpqLb2qxN/Z0+1d15T0
+qtr/MJ1JX7o8hr/cWWJn7HHvdUk27T3jazxH5eV5AOX1fiLK0r8znU1/uHG
Er94bY2/uKHEz11T4z+uL/Fbl9b4l8tL8oRzavzZ+SV5xLk1/uyCkjzhjBq/
dVaJvzXj008MbeIPzHDV/+pr/YYefIVej+k3zFDNuoc0yVb17Mv3ests0UzQ
ewlmmGaFZg5T9f33q96D6jf0C/oLM4FBff/8vtfT0/T9Uf1o5miWbmZpFqnn
1/ubGZiVmjmYPehXzKbNLMwu9LBmuWaKen8zALNGNZza7Lxe25mf6t/PLvGP
N5V4N38Df4uTS7If56xz14xVr+97fK8Z9VNtMlqzazPZN9pkmma1ZjRmNdM3
yVrNcF+HH26S7ZpBP90m0zWbvrgkK3COOlfVqCf3/cZ6ZmZhdqHeHNWvMbMG
55RrzznzWn99P7//n9f7z+P/3zn0an9955ZrTm/rnHUtqm/NTlzTF3dZE3pj
56hrxTXxbq8vXCtqcr28PVqt/hF/78MmGbT6yjnv3Dff13vs0/8eLzfR3gt0
0aJ6uAU5XqiLVv2MbeEunvDj/vfTK1pD9O7OeWvLgX6eknus49jParywnlfv
+36NVtQj65U/qtGKagC1wL9qeq890d44d3/+MiXa0jVt1uEacq2/W+Od9cB6
YTXocvB8JdpUD6NX/G2Jt3kPXq2J59Z7f1ijXdQsapfR8EZNNI3a5oMaLaOG
UcvoacxSrDF6HT2M2YQ1QG+jBzKLsEbojfQkepMv2Gbg+Elem7aJJ567S402
a7RGWrutQWaV1tyR/fx7sp/Pzk9rklmMNcNaZWbsvVzzCLPka7jm7PBk8Of+
n3ntmyaeyt9X//1yyf0k703pB18tyZ/MIm+Dl+T9s8Df8vp98CrwQnCpqWlm
pdZ4a90W/fpTr1qbrbGj+vVo7X2iJitUM8/WpQaazdoDrI1qSLMsa6Ta0ozh
o369mz1YU82y7DHW2vX7fnxdv96tmQ/0/dlaas8xm9Lz24vsKU/0/df1a496
vK8f9i5rsNmuPc3abI8zezQjsPfZs8xOzQTsZV/VaDU1odrwnzXaUE2oNly2
n89rlnjIr2u0n5pSbflAjRfRg+hF/lJT263xZj3f12hbNa3adgo9ZJMaZi37
sUZrqWHVspN3qSXWFGuZv5G/3ST9b/dyjZfX4+v1X6tZm2ZIZkmv1Py2en7X
x6s12ZKZjtnOizW9xp6jl3+pJiswEzAbmIzt9iY109qpZ9FbnFviZX7XZW44
R6zV43TRNmpOtedYXbSimlJtOXYXLaqGVEvqsfXem5Z479JFG6op1Za1i3ZU
M6oduy7aUk2pthzo4p3UnGpP56if5+oSbzZll9pnDbQ3Tdql9ttD7CWTdFl7
rkG1nB5M779ziTezxpnf672sfa4h15IeTC82Qf/9zlCSBfy1r09mcmZzn9V4
Dz2R3ujzGi+hJ9GbfFrjlfREeqO3a7yans0s8p2a7M+M0qzy2f73NyMzK/sE
3qGJB9ILfVHjPfQsepd/13gLPYfe4+Mar6Tn0nt9U+NF9DB6mb/XeA09jF7m
y/730YPoRZ7p662ZnNnc0zXZnJmU2dRTNdmUmZTZ1KM13l2Pr9d/pMbr6+H1
8o/VZIV6fL3+mzXaSI1k9vpdTS+2J+v9Hq7RLmoYvfyDNdmRGYBZwEM1tdFM
yWzJGiePU1L7nqvRQmois9hRNVmZGZtZ2/M1WZsZq1mrNXZs+Kc2tfetmqzV
zNfsVw/+UMkccT6YaZhtmBfM1+UZIZ8V8p7jkjXPXPnslX53zZpnkHwWyXuU
i9Tkq94rm7RNf1ZDey/ODFNtrSb3XsglTbS6ekm/o//Rf5hpei/PjPGwvl87
d80P5ulyj95nsbzn6b37N2o+6xRsg7s8s+SzS2PugTL2es17zWzMbrzn49xx
DulT1RN+VjOKebs8c+KzJ94TXbrmGQGfRfMeqM8OmJ+Zpa1jLa7JOF3rrnn9
mRm9a8E1ob/X71o7rCH6OTNc793rF812fQbNZ9G2tsbVPKPls1o+A7F6zTM1
ag9rtrV7zDNVbZ5pWLHmmTeffdsGXrXmmRqfrRnuHKi556Y2UCOYT/hMhc+6
mXf4rIX6abI2GdH8XTJj/az+WX8+nd95k3PUV2Ys+lH9uX7TjOnNkrxrrl4/
jMPxJ4xP06W/ftskQzdLN/98vqTnymbGPhuh/zZLNlP22QkzarNm73n77JfP
EHgv3GdA1GpqNvMY73GObvI37N/eE/dZGJ/h8F6598B9VsxnErw37jMgPqvm
PXGfDTHvfLhkzjp3fQZRvez/Qf3jPXGfpfF+iPfK9aDmFyOb6HvXy/slz2A5
v9Qsahfvkc7ZJdP32Q79u1m/mb73rs3Mzfr/D71LDtY=
          "]], Polygon3DBox[CompressedData["
1:eJwt13m8TdUeAPBzz7mnDM2hpIhQGighV8pcGasrY6GQKTOFQubMmaeQMkSl
CZVCr0fvaaBJZW6eqTS8Srze9/f2/eP32ev3Xb+1z9nTWnuX7dwvv286lUp9
KLLij0wq1Q6Mzkml+sjbyJuKJqJbbirVUt9B2xvlLUQP7VbsE9uj8lu1xxrb
z9h28j9FezaG9WVt5a3UXsMGs07sErZTnMyuYKXYX9q7WW3tm9mn8suNe4sV
1b6MldT3p/YtvLbtINaRXazmL3EbG8f6s/bybSIn9sNOYj9qX81qiY720US+
y/Y+MU17m7qn1E3S31w0E9313aLv4ziG+H+ik3ZT9oFtT9FGe7qxw4xtpf8r
cR3ry9qxavL3xBmsFivPcuTfiBviHLgQNbSvEjvESayKunPUHdXe4zd2i85x
HeR7bRupayi6aN/E9tkuEC9o/2DsHmPX6X9fnBnHzSqwtPwLUZPdzpqyivLh
xk5nr7Gn2WT2tbie9WPtWXV5PVFX3KG+ub6PbBvHcYg7tfPZAdvP5DW0Oxrb
2Njysa84L6Kr/pv17bf9PI5bu5O6JuoqyL8VjVnVbHKt4pq9I05jNdWVU/e3
9rvsdNs8dgFLyeuIa8Xt9t1M34dxfkR17d7qWisrF/dtnEM2nHVjVVk+q8UG
sNvYhSzL7mKz2f2sJ8tlvdgsNpL1YJm4F9hMNoJ1Z/3Y3exJNp8NYiew/mwB
G8v6sCFsAtvMVrOx7G42jr3MVrExcf+wiewZtphNYEPZA2wLW8PGsY/inGnf
xA7qq6zmHjFeexN7TN9oNYXYQLaIjWf92F2sG1vCJrKu7EQ2gC1k41hf9nfc
e2wKu4fdLv+v6Mwms7tZp3j+jL2TTWNDWWd2PO4fNokNZh3lfdT1YSvYcvGL
vG8EWyl/UF0vdcfi2rKJbBDrIO+lriOby+aIb+T3iqlsq3ytuonqCrNB7CE2
gfVnvVl3tpRNYl1YmvVgM9hw1o21ZFezgawDq8SGsSnsn+xVkXG//pBJntGr
ssnzGc/pMnVbY36JedPYl1hePIMxZ+Umc8B7tk/Jd+l/NvYpHs5N5oSYGzrk
Js/E+7btRAPte/1mV/WXx1wax8weZdPZUNaG1WNDWWdWmd3M8lh/diu7iJ3C
RrHVbDYbwVqzumxIXF/xtrytqM+GybuoqxJzPWvI7mN3sivY9nhGWBl2JvtF
u6i6obbL2FR2Tzy7bCx7gs1jo1j/uFfZWraADWQD2BD2FFvIBsdcwMawx9lc
dj8byIazdew5cUx+qhjN1sS9oW6kusFsJNvAHmb3ZpL1J9ahXTGvx3lUc6aY
pP2suiX6Hsgka0isJe/GNROPxD0lRmivV7dU37CYw9mw6GfT2BD2Rjz/7AJW
nP2mXUndEe3t2jvERfI345nTrqCuhL7/aDfk5WzbsbZia25iZVnjmDtjfXTP
/ZhJ1oOa2WSujTm3kboLWHs1De3vtIJ7d3I6OU9xvlpEPSvPbpU3Une6uuJs
JtvIVrDprAE7L9ZhVocVZfXZuawlu5YVjrWClWL57BpWhBVjM9iL8Zyzaeyn
TLIe5GWTdSTWk8OZZH2pwerHb4pDmWROr55N1qBYi6bb3+PsU/t70/5WsTls
HfuOfcCeZnPZevZ9TvLu80w8p6wau4u1YmVZC3Yl68VuYefH/2BVWU/WkpVh
RzLJWlcrm7wrxTvTOeqeYbvj+qhby86KdZn9gz3J5sX6xIqx2nFe4hmxjzFs
YTqZR2I+acOKsMFssfwBYwfE9WQV2G3sOnYGK8FmsZfYSvZgzC3smLyiuFCc
nE2e6Trqust7iEtifWWF08n/iP+zLuY5UYRdG+Pt7/foj2cp7kNWhR2L/89O
sW3AKrPj8S4Txyb/LI5FlC54b2mRTuaRmE9ibqzCTtf+OM6NODfmG3GWdjNe
w/5yC85V8XRyf8d9vkl+cRyb/r18j1gexyVKaDdVUz1eBYydxzawQ+yjmFcL
5oj70skaE2vN9f5LSfYIe12+Xt3SuJ7sMtaV3chKsWlsNXuHvRtzqrHN2BXp
5HzGeX1D3kRcyrrEc2XsOQXrW+90sj7FOlU/7vU4FnaHvJm6kgVrWQc2Ptao
eL7Unc2Wse1xfdQtySS/e3k6mQtiTiirLo+l45mRl1F3JOYGdoltZ9acnZ1J
rnmhmGtYJXGqsa/Huw4rKy+m7lft2eqes/02J1mXYn2awZ5kn7MdbDV7NdZ+
+cWiMDsU61e8I8gvFUXY4ViLM/EC6l5hRTV/0P4lk7xf184m3xfxnfF9Jnm/
rpZN3uXqFNzPxwv+b/zvNfHeIx6Ne0C+zf6WqZvCVrEDbDtbziay5Wwve409
zCaxFWwf+xd7hE1gS2P+Z6+wRWyfOJ/dwKqxU+V7RRl2PbuSnSLfI0qz61hV
drL8w5gTWP141lgh+QeiJKsX54udGGu+OJvVjeNjJ8g/FpXSybdQfBOdJT8o
Lkon73XxfldC/mU8I6wby2eXyT8RlVnruM/YefLvMsn3zpXZ5BsmvmUmO96V
bL+6f6t7lO0XFVkLlseKyT8VVVgb1oCVlh8QF7IbWS1WXD7e/pawXWwLW8jG
scXsfbaZLWBj2UOxfsbzzOazLeJP+fk5yXfpN/o3sd/l5+b8/9U+9RV7yNiX
bX9m+9nzOjaLP+Slhe7U1zGnxJouLy9OZN+xV9hReTlxAvuWLTLgJdsjbB/b
oGYmW8u+YDvZGraYbYr7lR1gL7BZ8c7GvmRvs8fZQraR/cT2svVsPnueHWa7
2XNxXKItG8V6s9byJeo2s1/ZQfYie5A9wT5jb7HH2K+Z5Bv8Gifqplg7xc+Z
5Fv96mzy3RrfryOMnc3eMHaDsTPZSDaHvcmeZzPY/Wwue4u9wGaxUWxevJOw
F9nsTLJGLUonc1/MgYWyyZy4hn0Sc3k812wp28J+CzN2o7G/idZsJOvJ8uWj
1c1nO9lGNodNZY+xg+x1tiIuPOvKpsb6Ib2D/Q9lJvtE
          "]]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jsvZVEYBuA1znE57p2cZDiIMBFORMiYhF9AdSYaOpmGgojGdJNp6ERD
J9OMTkelZPwA9/slIm7jTinx7FC863l3drK+tXZ2Vd9QZvBTCGFcCpWoZ1lO
eZYVQikfmOIr08yPhdDBJLv4hb1s4zcZ0Lv5kz9i73uPcJq/OctJLvAPl1kV
D+GaxWavRTP4yAuu85IbvOImr7nF/9zmDXd4yzvZ1e+5F52f+3zkAZ94yGce
8YXH/Od+NyzxfMICPnHRGVc5xyXOcJ4T/MtfnOIwx9jHUX5nRvr1Vvawlp0s
Yzu/unfSnEY9pV+yQsr1cxZ5V8IE76N9WMwYW6RIb2Yhm1jANPPZwATrmcc6
1kquXsMcVjOblYxHs+lo4TN9jrBiuf34N94A0glBGQ==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{741, 1051, 502, 740, 1188, 956, 742, 1189, 957, 743, 1190, 
       958, 744, 1191, 959, 745, 1192, 960, 746, 1193, 1080, 1293, 747, 1194, 
       961, 748, 1195, 962, 749, 1196, 963, 750, 1197, 964, 751, 1185, 1198, 
       965, 1066, 1187, 1402, 1068, 1059, 1063, 966, 1061, 1399, 1064, 1065, 
       1060, 1069, 967, 1053}], 
      Line3DBox[{753, 1081, 1294, 752, 515, 754, 1199, 968, 755, 1200, 969, 
       756, 1201, 970, 757, 1202, 971, 758, 1203, 1082, 1295, 759, 1083, 1296,
        760, 1204, 972, 761, 1205, 973, 762, 1206, 974, 763, 1186, 1207, 975, 
       1067, 1401, 1052, 1071, 1074, 1075, 1062, 1400, 1054, 1073, 1076, 1077,
        1055}], 
      Line3DBox[{765, 1084, 1297, 764, 1085, 1298, 766, 1208, 976, 767, 1209, 
       977, 768, 1210, 978, 769, 1211, 979, 770, 1212, 1086, 1299, 771, 1087, 
       1300, 772, 1088, 1301, 773, 1213, 980, 774, 1214, 981, 775, 1215, 982, 
       776, 1403, 1070, 983, 1078, 1404, 1072, 984, 1079}], 
      Line3DBox[{778, 1089, 1302, 777, 1090, 1303, 779, 1091, 1304, 780, 1216,
        985, 781, 1217, 986, 782, 1218, 987, 783, 1219, 1092, 1305, 784, 1093,
        1306, 785, 1094, 1307, 786, 1095, 1308, 787, 1220, 988, 788, 1221, 
       989, 789, 1222, 990, 790, 1223, 991, 791}], 
      Line3DBox[{793, 1096, 1309, 792, 1097, 1310, 794, 1098, 1311, 795, 1099,
        1312, 796, 1224, 992, 797, 1225, 993, 798, 1226, 1100, 1313, 799, 
       1101, 1314, 800, 1102, 1315, 801, 1103, 1316, 802, 1104, 1317, 803, 
       1227, 994, 804, 1228, 995, 805, 1229, 996, 806}], 
      Line3DBox[{808, 1105, 1318, 807, 1106, 1319, 809, 1107, 1320, 810, 1108,
        1321, 811, 1109, 1322, 812, 1230, 997, 813, 1231, 1110, 1323, 814, 
       1111, 1324, 815, 1112, 1325, 816, 1113, 1326, 817, 1114, 1327, 818, 
       1115, 1328, 819, 1232, 998, 820, 1233, 999, 821}], 
      Line3DBox[{825, 1234, 1000, 823, 1235, 1001, 827, 1236, 1002, 829, 1237,
        1003, 831, 1238, 1004, 833, 1239, 1005, 835, 1241, 1242, 1006, 837, 
       1243, 1007, 839, 1244, 1008, 841, 1245, 1009, 843, 1246, 1010, 845, 
       1247, 1011, 847, 1248, 1012, 849, 1250, 1014, 851}], 
      Line3DBox[{850, 1013, 1249, 848, 1341, 1128, 846, 1340, 1127, 844, 1339,
        1126, 842, 1338, 1125, 840, 1337, 1124, 838, 1336, 1123, 836, 1335, 
       1122, 1240, 834, 1334, 1121, 832, 1333, 1120, 830, 1332, 1119, 828, 
       1331, 1118, 826, 1330, 1117, 822, 1329, 1116, 824}], 
      Line3DBox[{853, 1129, 1342, 852, 1251, 1015, 854, 1252, 1016, 855, 1253,
        1017, 856, 1254, 1018, 857, 1255, 1019, 858, 1256, 1130, 1343, 859, 
       607, 860, 1257, 1020, 861, 1258, 1021, 862, 1259, 1022, 863, 1260, 
       1023, 864, 1261, 1024, 865, 1262, 1025, 866}], 
      Line3DBox[{868, 1131, 1344, 867, 1132, 1345, 869, 1263, 1026, 870, 1264,
        1027, 871, 1265, 1028, 872, 1266, 1029, 873, 1267, 1133, 1346, 874, 
       1134, 1347, 875, 623, 876, 1268, 1030, 877, 1269, 1031, 878, 1270, 
       1032, 879, 1271, 1033, 880, 1272, 1034, 881}], 
      Line3DBox[{883, 1135, 1348, 882, 1136, 1349, 884, 1137, 1350, 885, 1273,
        1035, 886, 1274, 1036, 887, 1275, 1037, 888, 1276, 1138, 1351, 889, 
       1139, 1352, 890, 1140, 1353, 891, 639, 892, 1277, 1038, 893, 1278, 
       1039, 894, 1279, 1040, 895, 1280, 1041, 896}], 
      Line3DBox[{898, 1141, 1354, 897, 1142, 1355, 899, 1143, 1356, 900, 1144,
        1357, 901, 1281, 1042, 902, 1282, 1043, 903, 1283, 1145, 1358, 904, 
       1146, 1359, 905, 1147, 1360, 906, 1148, 1361, 907, 655, 908, 1284, 
       1044, 909, 1285, 1045, 910, 1286, 1046, 911}], 
      Line3DBox[{913, 1149, 1362, 912, 1150, 1363, 914, 1151, 1364, 915, 1152,
        1365, 916, 1153, 1366, 917, 1287, 1047, 918, 1288, 1154, 1367, 919, 
       1155, 1368, 920, 1156, 1369, 921, 1157, 1370, 922, 1158, 1371, 923, 
       671, 924, 1289, 1048, 925, 1290, 1049, 926}], 
      Line3DBox[{928, 1159, 1372, 927, 1160, 1373, 929, 1161, 1374, 930, 1162,
        1375, 931, 1163, 1376, 932, 1164, 1377, 933, 1291, 1165, 1378, 934, 
       1166, 1379, 935, 1167, 1380, 936, 1168, 1381, 937, 1169, 1382, 938, 
       1170, 1383, 939, 687, 940, 1292, 1050, 941}], 
      Line3DBox[{955, 1058, 1398, 1184, 954, 1397, 1182, 953, 1396, 1181, 952,
        1395, 1180, 951, 1394, 1179, 950, 1393, 1178, 949, 1392, 1177, 948, 
       1391, 1390, 1176, 947, 1389, 1175, 946, 1388, 1174, 945, 1387, 1173, 
       944, 1386, 1172, 943, 1385, 1171, 942, 1183, 1384, 1056, 1057}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{284, 503, 1188, 285, 515, 311, 1298, 527, 324, 1303, 540, 
       339, 1310, 555, 354, 1319, 570, 369, 1330, 585, 1235, 384, 600, 1251, 
       399, 1345, 615, 414, 1349, 630, 429, 1355, 645, 444, 1363, 660, 459, 
       1373, 675, 474, 1385, 690, 489}], 
      Line3DBox[{286, 504, 1189, 287, 516, 1199, 312, 528, 1208, 325, 1304, 
       541, 340, 1311, 556, 355, 1320, 571, 370, 1331, 586, 1236, 385, 601, 
       1252, 400, 616, 1263, 415, 1350, 631, 430, 1356, 646, 445, 1364, 661, 
       460, 1374, 676, 475, 1386, 691, 490}], 
      Line3DBox[{288, 505, 1190, 289, 517, 1200, 313, 529, 1209, 326, 542, 
       1216, 341, 1312, 557, 356, 1321, 572, 371, 1332, 587, 1237, 386, 602, 
       1253, 401, 617, 1264, 416, 632, 1273, 431, 1357, 647, 446, 1365, 662, 
       461, 1375, 677, 476, 1387, 692, 491}], 
      Line3DBox[{290, 506, 1191, 291, 518, 1201, 314, 530, 1210, 327, 543, 
       1217, 342, 558, 1224, 357, 1322, 573, 372, 1333, 588, 1238, 387, 603, 
       1254, 402, 618, 1265, 417, 633, 1274, 432, 648, 1281, 447, 1366, 663, 
       462, 1376, 678, 477, 1388, 693, 492}], 
      Line3DBox[{292, 507, 1192, 293, 519, 1202, 315, 531, 1211, 328, 544, 
       1218, 343, 559, 1225, 358, 574, 1230, 373, 1334, 589, 1239, 388, 604, 
       1255, 403, 619, 1266, 418, 634, 1275, 433, 649, 1282, 448, 664, 1287, 
       463, 1377, 679, 478, 1389, 694, 493}], 
      Line3DBox[{294, 508, 1193, 296, 520, 1203, 316, 532, 1212, 329, 545, 
       1219, 344, 560, 1226, 359, 575, 1231, 374, 590, 1240, 1241, 389, 605, 
       1256, 404, 620, 1267, 419, 635, 1276, 434, 650, 1283, 449, 665, 1288, 
       464, 680, 1291, 479, 1390, 695, 494}], 
      Line3DBox[{298, 510, 1194, 299, 1296, 522, 318, 1300, 534, 331, 1306, 
       547, 346, 1314, 562, 361, 1324, 577, 376, 1336, 592, 1243, 391, 607, 
       406, 1347, 622, 421, 1352, 637, 436, 1359, 652, 451, 1368, 667, 466, 
       1379, 682, 481, 1392, 697, 496}], 
      Line3DBox[{300, 511, 1195, 301, 523, 1204, 319, 1301, 535, 332, 1307, 
       548, 347, 1315, 563, 362, 1325, 578, 377, 1337, 593, 1244, 392, 608, 
       1257, 407, 623, 422, 1353, 638, 437, 1360, 653, 452, 1369, 668, 467, 
       1380, 683, 482, 1393, 698, 497}], 
      Line3DBox[{302, 512, 1196, 303, 524, 1205, 320, 536, 1213, 333, 1308, 
       549, 348, 1316, 564, 363, 1326, 579, 378, 1338, 594, 1245, 393, 609, 
       1258, 408, 624, 1268, 423, 639, 438, 1361, 654, 453, 1370, 669, 468, 
       1381, 684, 483, 1394, 699, 498}], 
      Line3DBox[{304, 513, 1197, 305, 525, 1206, 321, 537, 1214, 334, 550, 
       1220, 349, 1317, 565, 364, 1327, 580, 379, 1339, 595, 1246, 394, 610, 
       1259, 409, 625, 1269, 424, 640, 1277, 439, 655, 454, 1371, 670, 469, 
       1382, 685, 484, 1395, 700, 499}], 
      Line3DBox[{306, 721, 722, 1198, 307, 724, 725, 1207, 322, 538, 1215, 
       335, 551, 1221, 350, 566, 1227, 365, 1328, 581, 380, 1340, 596, 1247, 
       395, 611, 1260, 410, 626, 1270, 425, 641, 1278, 440, 656, 1284, 455, 
       671, 470, 1383, 686, 485, 1396, 701, 500}], 
      Line3DBox[{308, 727, 728, 723, 730, 729, 1402, 711, 731, 732, 726, 1401,
        704, 735, 733, 1403, 734, 336, 552, 1222, 351, 567, 1228, 366, 582, 
       1232, 381, 1341, 597, 1248, 396, 612, 1261, 411, 627, 1271, 426, 642, 
       1279, 441, 657, 1285, 456, 672, 1289, 471, 687, 486, 1397, 702, 501}], 
      Line3DBox[{309, 715, 716, 713, 718, 1399, 717, 712, 719, 720, 714, 1400,
        705, 738, 736, 739, 1404, 737, 337, 553, 1223, 352, 568, 1229, 367, 
       583, 1233, 382, 598, 1249, 1250, 397, 613, 1262, 412, 628, 1272, 427, 
       643, 1280, 442, 658, 1286, 457, 673, 1290, 472, 688, 1292, 487, 1398, 
       707, 708, 709}], 
      Line3DBox[{488, 689, 706, 1384, 473, 674, 1372, 458, 659, 1362, 443, 
       644, 1354, 428, 629, 1348, 413, 614, 1344, 398, 599, 1342, 383, 1234, 
       584, 1329, 368, 569, 1318, 353, 554, 1309, 338, 539, 1302, 323, 526, 
       1297, 310, 514, 1294, 283, 502, 703, 710}], 
      Line3DBox[{495, 696, 1391, 480, 681, 1378, 465, 666, 1367, 450, 651, 
       1358, 435, 636, 1351, 420, 621, 1346, 405, 606, 1343, 390, 1242, 591, 
       1335, 375, 576, 1323, 360, 561, 1313, 345, 546, 1305, 330, 533, 1299, 
       317, 521, 1295, 297, 509, 1293, 295}]}, {}, {}, {}, {}, {}}},
   VertexNormals->CompressedData["
1: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
7hoBzzNHA6prJkD1g1rDhCAesTXkGfZUDIL4z8Xt9zMmwfsza1FByDwKeax6
M5F1Cg5zsjenNgyCMEvtZ73fOHTaGk6cOTIB2uR6zNULI5CQIxIi9nUeBa7v
5fqQhoETjaOn8MojkJrOYfVGifbeL4zdZB/aD5xf7vlmPByHNy2hW9gcCOil
MmWzUXMv7Hh2f1mNeQIqX6dz7O2jfX8Vlt5xRPfDhxfL7x7+nIBLdI7Xms7x
htE5Xg36+Q36eQn9/C2d4/Wic7x76Rzva/p5DP2c4y++t5PO9+bR+d5Z+jmi
nxfTz8d2q6y9PUpAQu/2VFpc7IbOaMeSJGUMKOy0N6uSJqBiUV/3jXc7IA1X
d8A5CwMP9Ycnv3ATEDZ3qSf4aQ9sORWz6RcHBmSPVW+UDsIjz4CWNbXSHrDS
1AvIbsZA6XE7roZCPJIXzD16Zr4DvPrZ0ynmWEhivMeT7oNH1mLHmVp1eiEm
+wFbVCoGXDb1VuzLwKOe7uMfsrBdkOdiUxxzAAuQd8eQ2k9F/t77FdUDUwDX
n8u30asQshZ2111cpSLfbDu30osPZQ9Rbg+2iMZBhfOIyEs/KpKyWryv2VYM
rX6D7gdlqqHeVr2o7SgVeV1PF4yQqAGrA00hj4YbwI6Ddef1RApSCrnmoljf
CFpUdslprjb4NBNc3cpKQVdvB5w042yHBg3rpXnbLtg3Nr6V7z4Z7RC/eeHj
9m6YzzdWc0/tgfTqLRq12SRUNVP5Lcy0F14xzi8eSOuD5csU1naanjd5Y2SS
Ed4PJ8TK8SUOAxCkHXUp5iQRPTH91uRH+7ts1nvwjJdzCNq7XXuWLQiIYS0/
UiRiGHrO5/A/ejkMYctj4g1xtOeWJMo89mgUeDe8MGspHoGw1+xPTnZREXGQ
D1/VEA2Met8+2dwoBZUxuQ2W36no2EXxvdqV92RzU82ET0mlQfQViSOWgVR0
qpBTZatDNlTZfjdWFq0FaUtrtmgZKtovRt36XbUYTsTn0fRFExzf/fJzXB8F
5fpvZlWeRvCsrGXto04HBMLuHi8dCrqcHrqiG1QL286ZR2VXdMOnng2sdjRf
X2Y5IUdhbYTB66FuTIJ9ICp1evIJkJH2cKjQom4LHDNvXnc1GIBWA4+WO/Ek
FHd9ffGWYzt0rD9guPF4CEqq+HmqGEnIWfh2hbNUFwx4DYfd0RqB8wlTVfMG
RPSiSmaKFNoNxzauxwhyj4GvMYNfZSkBhZtrVBbO9sBuTb+M+MxxUDd/xY2v
oyKH/a8Y853DIN1N6PcIUyVINLoenCFRkVFM3PvfX3Rk7XhfHkl7ngO2nffE
mtypSJWgUPGC5uMqT0jVt22qp32P7X4HnaYiJ1JiUUNoLgSqVr291dgC3YUy
T3O6KEh5pl6Hx7oYvgiXVWAOdkFU17fGRD0KCmDY38fHWgmD0Tu3hFTQfi/H
W5ZsE2Tkrrpj9FpxNQz1L/Qwi/dD29kGsKf5GtyON1cclOpo81fd587rQbjI
eT3yUi3tOSQ9jAsvaYBrXFFchgnDUIoTJsaJklCgn4CSw9ZmcLCuF82NH4UL
L0JtAgOJqKLpAt5SqhWy4t98tXw1Do5PiBeqFwnoNzh9v321HWz9Wka4T0/C
Ip6jN06HgLbuKk+3kOiEFynaIsgYA1knrh3jLKIiSE9V9Uz8CKsTfN3qQ1Vg
6OpnkjdNRfelCkweutyWPZhHcEu7XACL38m+nPZUNMPfsHenaTx0prwqyult
gNDz6s2fD1JRVOKeohcSmeCkMy0n/6EN+IeD7mIrKWjlJ/OXn8N5NN8d+fj3
1m7ogqCtx2j6pPIIeUnIqhiy1zR6fBN64aKcT0JPJxktskk3n+sph3HXDWrx
+wYg4/dS3lElMvotnj6d61IFV7K5tuvS7g9LYzLD7TISag6vjmN2rgH1Ip+f
byNHwMxi5pSeEAld9M44QDWuA67k4u9BCWMwtOGQzlbac+tzW0kPON4A3OdD
3Fy9JuDHr6nD+BXavVKMKXg/3gjt2yu51Q9j4NYYg5L2PQI6fF6Zo8m2GSqf
urRd/4EBRGKuc2jGozNebONq31uA3FdkHFGAheezIg6SEnhkdEQ8+Z5eG3Qn
qbCcMpuC1xV2w/JJVORjqEv4qh8AdV+xloYpNfBmR7vj2BAViQnqnoOHGrLH
kwbXgn4Xg/EjxYPPjahIWbQEFyoSA1LlXAsbPjWBO3PpgjLNJ366pBdDsUoB
bwE/nnsaHbCanXKhizbfrrSVLp8qzobgl6PHY+e64cGLoFnJ0xTkxWSY2/Uh
H9YORFZyuvRBVmGGZV4hGXGdP3ySV6EY7PEdWdSlAdh4sXXfk1NkdGmxhrWz
swwWxA5OGF0bhuoffWzP40hIWDX2XZYogsfyS4euPhuFmTaejlQOElotd4Xs
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

    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 10}, {0., 5.396632682979149}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638160668763588*^9, 3.638160699342337*^9, {3.6381607316001825`*^9, 
   3.638160757410659*^9}, 3.703562677249938*^9, 3.708654102281732*^9, 
   3.708684643529293*^9, 3.7086851111392183`*^9, 3.708685253288608*^9, 
   3.723877698467161*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"CapCltherm", "[", 
       RowBox[{"eta", ",", "0.5", ",", "Vn", ",", "15"}], "]"}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], "]"}]}],
      ",", 
     RowBox[{
      RowBox[{"CapCltherm", "[", 
       RowBox[{"eta", ",", "0.5", ",", "Vn", ",", "25"}], "]"}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], "]"}]}],
      ",", 
     RowBox[{
      RowBox[{"CapCltherm", "[", 
       RowBox[{"eta", ",", "0.5", ",", "Vn", ",", "35"}], "]"}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"20", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"eta", ",", "0", ",", "0.3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Vn", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6381608406084175`*^9, 3.6381608589364653`*^9}, {
  3.6381609950162487`*^9, 3.6381610252629786`*^9}, {3.638161065097257*^9, 
  3.638161160657723*^9}, {3.6381627803633647`*^9, 3.6381628285921235`*^9}, {
  3.6381633789216003`*^9, 3.6381633936034403`*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{270.3999999999987, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0, 0.3}, {0, 20}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6381629139380045`*^9, {3.638163382131784*^9, 3.638163394241477*^9}, 
   3.703562677348711*^9, 3.7086541023627567`*^9, 3.708684643620488*^9, 
   3.708685111217856*^9, 3.7086852533726788`*^9, 3.723877698655993*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6381628850133505`*^9, 3.638162885039352*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "*", 
       RowBox[{"CapCltherm", "[", 
        RowBox[{"eta", ",", "0.5", ",", "Vn", ",", "15"}], "]"}]}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], "]"}]}],
      ",", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], 
       RowBox[{"CapCltherm", "[", 
        RowBox[{"eta", ",", "0.5", ",", "Vn", ",", "15"}], "]"}]}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], "]"}]}],
      ",", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "4"}], 
       RowBox[{"CapCltherm", "[", 
        RowBox[{"eta", ",", "0.5", ",", "Vn", ",", "15"}], "]"}]}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], "]"}]}],
      ",", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "8"}], 
       RowBox[{"CapCltherm", "[", 
        RowBox[{"eta", ",", "0.5", ",", "Vn", ",", "15"}], "]"}]}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"eta", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Vn", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6381612097055283`*^9, 3.638161221987231*^9}, {
  3.6381621504263344`*^9, 3.638162154435564*^9}, {3.6381650183603706`*^9, 
  3.638165082913063*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{415.9999999999997, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0, 1}, {0, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.638161223219301*^9, {3.638165049169133*^9, 3.638165083981124*^9}, 
   3.703562677478426*^9, 3.7086541024737787`*^9, 3.708684643745933*^9, 
   3.7086851113324347`*^9, 3.708685253490203*^9, 3.723877698792295*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "*", 
       RowBox[{"CapCltherm", "[", 
        RowBox[{"eta", ",", "0.5", ",", "Vn", ",", "25"}], "]"}]}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], "]"}]}],
      ",", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "2"}], 
       RowBox[{"CapCltherm", "[", 
        RowBox[{"eta", ",", "0.5", ",", "Vn", ",", "25"}], "]"}]}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], "]"}]}],
      ",", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "4"}], 
       RowBox[{"CapCltherm", "[", 
        RowBox[{"eta", ",", "0.5", ",", "Vn", ",", "25"}], "]"}]}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], "]"}]}],
      ",", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "8"}], 
       RowBox[{"CapCltherm", "[", 
        RowBox[{"eta", ",", "0.5", ",", "Vn", ",", "25"}], "]"}]}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"eta", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Vn", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6381654423186197`*^9, 3.638165448400968*^9}}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0, 1}, {0, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6381654497920475`*^9, 3.703562677593985*^9, 
  3.7086541026065483`*^9, 3.70868464385809*^9, 3.708685111439825*^9, 
  3.708685253599986*^9, 3.7238776989059353`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"CapCltherm", "[", 
     RowBox[{"eta", ",", "0.1", ",", "Vn", ",", "15"}], "]"}], "==", 
    RowBox[{"rGauss", "[", 
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"10", "^", 
        RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
      RowBox[{"EPRlossA", "[", 
       RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], "]"}]}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"eta", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Vn", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0, 1}, {0, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.703562677652808*^9, 3.7086541026621447`*^9, 
  3.708684643914309*^9, 3.70868511149223*^9, 3.708685253702737*^9, 
  3.723877698970142*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rMaj", "[", 
  RowBox[{
   RowBox[{"1", "+", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}], ",", "1", ",", 
   RowBox[{"EPRlossA", "[", 
    RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6381609202479725`*^9, 3.638160929104479*^9}, {
  3.638160960289263*^9, 3.6381609745530787`*^9}}],

Cell[BoxData["0.09904227499424823`"], "Output",
 CellChangeTimes->{
  3.6381609294835005`*^9, {3.6381609680117044`*^9, 3.6381609970403643`*^9}, 
   3.703562700175459*^9, 3.708654126246387*^9, 3.7086846650301743`*^9, 
   3.708685132714744*^9, 3.7086852740505047`*^9, 3.723877721799198*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "3"}], 
       RowBox[{"CapCltherm", "[", 
        RowBox[{"eta", ",", "0.1", ",", "Vn", ",", "15"}], "]"}]}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], "]"}]}],
      ",", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "3"}], 
       RowBox[{"CapCltherm", "[", 
        RowBox[{"eta", ",", "5", ",", "Vn", ",", "15"}], "]"}]}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"7", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], "]"}]}],
      ",", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "3"}], 
       RowBox[{"CapCltherm", "[", 
        RowBox[{"eta", ",", "5", ",", "Vn", ",", "15"}], "]"}]}], "==", 
      RowBox[{"rGauss", "[", 
       RowBox[{
        RowBox[{"1", "+", 
         RowBox[{"10", "^", 
          RowBox[{"-", "4"}]}]}], ",", "0.2", ",", 
        RowBox[{"EPRlossA", "[", 
         RowBox[{"20", ",", "0.96", ",", "0.001"}], "]"}], ",", "1"}], 
       "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"eta", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Vn", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->1,
  DisplayFunction->Identity,
  Frame->True,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic},
  PlotRange->{{0, 1}, {0, 10}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.703562700403163*^9, 3.708654126502482*^9, 
  3.7086846652877827`*^9, 3.7086851328441677`*^9, 3.708685274164459*^9, 
  3.723877721994936*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"G0", "=", 
   RowBox[{"EPRlossB", "[", 
    RowBox[{"6", ",", "1", ",", "0"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a0", "=", 
   RowBox[{"1", "+", 
    RowBox[{"10", "^", 
     RowBox[{"-", "4"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"LogPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"riid", "[", 
      RowBox[{"d", ",", 
       RowBox[{"EPRlossB", "[", 
        RowBox[{"6", ",", "1", ",", "0"}], "]"}], ",", 
       RowBox[{"10", "^", "10"}], ",", "1", ",", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{"-", "9"}], ")"}]}], ",", "1"}], "]"}], ",", 
     RowBox[{"rGauss", "[", 
      RowBox[{"a0", ",", "d", ",", "G0", ",", "1"}], "]"}], ",", 
     RowBox[{"BmajFu", "[", "d", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"d", ",", "0", ",", "0.2"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6389231423702765`*^9, 3.638923217866595*^9}, {
  3.6389232493563957`*^9, 3.638923276088925*^9}, {3.638923381019927*^9, 
  3.6389234269435534`*^9}, {3.6389386386356125`*^9, 3.6389386640890684`*^9}, {
  3.638938768079016*^9, 3.638938899118511*^9}, {3.638938940405873*^9, 
  3.6389389623811293`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(1 \[LeftDoubleBracket] \
\\(\\(1, 1\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is longer than depth of \
object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.638938941532937*^9, 3.703562700528034*^9, 
  3.708654126629262*^9, 3.7086846653628273`*^9, 3.708685132920532*^9, 
  3.708685274234133*^9, 3.723877722153325*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(1 \[LeftDoubleBracket] \
\\(\\(1, 1\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is longer than depth of \
object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.638938941532937*^9, 3.703562700528034*^9, 
  3.708654126629262*^9, 3.7086846653628273`*^9, 3.708685132920532*^9, 
  3.708685274234133*^9, 3.7238777222518053`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part specification \[NoBreak]\\!\\(1.` \
\[LeftDoubleBracket] \\(\\(1, 1\\)\\) \[RightDoubleBracket]\\)\[NoBreak] is \
longer than depth of object. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partd\\\", ButtonNote -> \
\\\"Part::partd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.638938941532937*^9, 3.703562700528034*^9, 
  3.708654126629262*^9, 3.7086846653628273`*^9, 3.708685132920532*^9, 
  3.708685274234133*^9, 3.723877722275774*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Part :: \
partd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.638938941532937*^9, 3.703562700528034*^9, 
  3.708654126629262*^9, 3.7086846653628273`*^9, 3.708685132920532*^9, 
  3.708685274234133*^9, 3.723877722303214*^9}],

Cell[BoxData[
 GraphicsBox[{},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -0.05},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Part[#, 1], 
      Exp[
       Part[#, 2]]}& )},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 0.2}, {-0.05, 0.05}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{Automatic, 
     Charting`ScaledTicks[{Log, Exp}]}, {Automatic, {{-0.040821994520255166`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.96\"", 0.96, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.020202707317519466`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.98\"", 0.98, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0., 
       FormBox[
        TagBox[
         InterpretationBox["\"1.00\"", 1., AutoDelete -> True], NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.01980262729617973, 
       FormBox[
        TagBox[
         InterpretationBox["\"1.02\"", 1.02, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {0.03922071315328133, 
       FormBox[
        TagBox[
         InterpretationBox["\"1.04\"", 1.04, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 2.}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.06187540371808753, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.05657035148839435, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.05129329438755058, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.046043938501406846`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.03562717764315116, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.030459207484708574`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.025317807984289897`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.015113637810048184`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.01005033585350145, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-0.005012541823544286, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.004987541511038968, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.009950330853168092, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.014888612493750559`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.024692612590371414`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.02955880224154443, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.03440142671733232, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.04401688541677426, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.04879016416943205, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.05354076692802976, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {0.058268908123975824`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          
          GraphicsBox[{}, ImageSize -> {0., 0.}, BaselinePosition -> 
           Baseline], "CacheGraphics" -> False], 
         Spacer[{0., 0.}]], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{{3.638923200029575*^9, 3.638923219036662*^9}, {
   3.6389232502204456`*^9, 3.6389232773289957`*^9}, {3.638923383717081*^9, 
   3.6389234281626234`*^9}, 3.6389386424998336`*^9, 3.6389388528258634`*^9, {
   3.63893888407065*^9, 3.638938900199573*^9}, 3.6389389417269487`*^9, 
   3.703562700756143*^9, 3.7086541269243717`*^9, 3.708684665633769*^9, 
   3.708685133196237*^9, 3.708685274470812*^9, 3.7238777225155687`*^9}]
}, Open  ]]
},
WindowSize->{926, 867},
WindowMargins->{{737, Automatic}, {Automatic, 42}},
Magnification:>1.25 Inherited,
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 189, 4, 49, "Input"],
Cell[CellGroupData[{
Cell[772, 28, 122745, 3249, 13022, "Input"],
Cell[123520, 3279, 72, 1, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123629, 3285, 48, 1, 38, "Input"],
Cell[123680, 3288, 214, 3, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123931, 3296, 627, 15, 38, "Input"],
Cell[124561, 3313, 1032, 27, 280, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[125630, 3345, 734, 20, 89, "Input"],
Cell[126367, 3367, 89602, 1464, 389, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216006, 4836, 1725, 45, 214, "Input"],
Cell[217734, 4883, 754, 21, 349, "Output"]
}, Open  ]],
Cell[218503, 4907, 94, 1, 38, "Input"],
Cell[CellGroupData[{
Cell[218622, 4912, 2201, 62, 264, "Input"],
Cell[220826, 4976, 750, 21, 537, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221613, 5002, 2099, 60, 264, "Input"],
Cell[223715, 5064, 655, 19, 467, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[224407, 5088, 586, 17, 89, "Input"],
Cell[224996, 5107, 629, 19, 467, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[225662, 5131, 371, 10, 38, "Input"],
Cell[226036, 5143, 288, 4, 38, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226361, 5152, 1600, 47, 214, "Input"],
Cell[227964, 5201, 632, 19, 467, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228633, 5225, 1219, 31, 114, "Input"],
Cell[229855, 5258, 662, 13, 27, "Message"],
Cell[230520, 5273, 664, 13, 27, "Message"],
Cell[231187, 5288, 664, 13, 27, "Message"],
Cell[231854, 5303, 668, 13, 27, "Message"],
Cell[232525, 5318, 9022, 228, 286, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
